package com.sensing.core.bean;

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MQMsg.proto

public final class MQMsg {
  private MQMsg() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface pbChannelInfoExOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pbChannelInfoEx)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string uuid = 1;</code>
     */
    boolean hasUuid();
    /**
     * <code>required string uuid = 1;</code>
     */
    java.lang.String getUuid();
    /**
     * <code>required string uuid = 1;</code>
     */
    com.google.protobuf.ByteString
        getUuidBytes();

    /**
     * <code>optional string channel_uid = 2;</code>
     */
    boolean hasChannelUid();
    /**
     * <code>optional string channel_uid = 2;</code>
     */
    java.lang.String getChannelUid();
    /**
     * <code>optional string channel_uid = 2;</code>
     */
    com.google.protobuf.ByteString
        getChannelUidBytes();

    /**
     * <code>optional string channel_psw = 3;</code>
     */
    boolean hasChannelPsw();
    /**
     * <code>optional string channel_psw = 3;</code>
     */
    java.lang.String getChannelPsw();
    /**
     * <code>optional string channel_psw = 3;</code>
     */
    com.google.protobuf.ByteString
        getChannelPswBytes();

    /**
     * <code>optional string channel_name = 4;</code>
     */
    boolean hasChannelName();
    /**
     * <code>optional string channel_name = 4;</code>
     */
    java.lang.String getChannelName();
    /**
     * <code>optional string channel_name = 4;</code>
     */
    com.google.protobuf.ByteString
        getChannelNameBytes();

    /**
     * <code>optional string channel_addr = 5;</code>
     */
    boolean hasChannelAddr();
    /**
     * <code>optional string channel_addr = 5;</code>
     */
    java.lang.String getChannelAddr();
    /**
     * <code>optional string channel_addr = 5;</code>
     */
    com.google.protobuf.ByteString
        getChannelAddrBytes();

    /**
     * <code>optional int32 channel_port = 6;</code>
     */
    boolean hasChannelPort();
    /**
     * <code>optional int32 channel_port = 6;</code>
     */
    int getChannelPort();

    /**
     * <code>optional string channel_no = 7;</code>
     */
    boolean hasChannelNo();
    /**
     * <code>optional string channel_no = 7;</code>
     */
    java.lang.String getChannelNo();
    /**
     * <code>optional string channel_no = 7;</code>
     */
    com.google.protobuf.ByteString
        getChannelNoBytes();

    /**
     * <code>optional int32 channel_type = 8;</code>
     */
    boolean hasChannelType();
    /**
     * <code>optional int32 channel_type = 8;</code>
     */
    int getChannelType();

    /**
     * <code>optional int32 protocol = 9;</code>
     */
    boolean hasProtocol();
    /**
     * <code>optional int32 protocol = 9;</code>
     */
    int getProtocol();

    /**
     * <code>optional int32 min_face_width = 10;</code>
     */
    boolean hasMinFaceWidth();
    /**
     * <code>optional int32 min_face_width = 10;</code>
     */
    int getMinFaceWidth();

    /**
     * <code>optional int32 min_img_quality = 11;</code>
     */
    boolean hasMinImgQuality();
    /**
     * <code>optional int32 min_img_quality = 11;</code>
     */
    int getMinImgQuality();

    /**
     * <code>optional int32 min_cap_distance = 12;</code>
     */
    boolean hasMinCapDistance();
    /**
     * <code>optional int32 min_cap_distance = 12;</code>
     */
    int getMinCapDistance();

    /**
     * <code>optional double min_confidence = 13;</code>
     */
    boolean hasMinConfidence();
    /**
     * <code>optional double min_confidence = 13;</code>
     */
    double getMinConfidence();

    /**
     * <code>optional double channel_threshold = 14;</code>
     */
    boolean hasChannelThreshold();
    /**
     * <code>optional double channel_threshold = 14;</code>
     */
    double getChannelThreshold();

    /**
     * <code>optional int32 cap_stat = 15;</code>
     */
    boolean hasCapStat();
    /**
     * <code>optional int32 cap_stat = 15;</code>
     */
    int getCapStat();

    /**
     * <code>optional int32 zoom = 16;</code>
     */
    boolean hasZoom();
    /**
     * <code>optional int32 zoom = 16;</code>
     */
    int getZoom();

    /**
     * <code>optional int32 max_face_count = 17;</code>
     */
    boolean hasMaxFaceCount();
    /**
     * <code>optional int32 max_face_count = 17;</code>
     */
    int getMaxFaceCount();

    /**
     * <code>optional bool face_merge = 18;</code>
     */
    boolean hasFaceMerge();
    /**
     * <code>optional bool face_merge = 18;</code>
     */
    boolean getFaceMerge();

    /**
     * <code>optional bool merge_all = 19;</code>
     */
    boolean hasMergeAll();
    /**
     * <code>optional bool merge_all = 19;</code>
     */
    boolean getMergeAll();

    /**
     * <code>optional double merge_threshold = 20;</code>
     */
    boolean hasMergeThreshold();
    /**
     * <code>optional double merge_threshold = 20;</code>
     */
    double getMergeThreshold();

    /**
     * <code>optional int32 merge_time_out = 21;</code>
     */
    boolean hasMergeTimeOut();
    /**
     * <code>optional int32 merge_time_out = 21;</code>
     */
    int getMergeTimeOut();

    /**
     * <code>optional string channel_guid = 22;</code>
     */
    boolean hasChannelGuid();
    /**
     * <code>optional string channel_guid = 22;</code>
     */
    java.lang.String getChannelGuid();
    /**
     * <code>optional string channel_guid = 22;</code>
     */
    com.google.protobuf.ByteString
        getChannelGuidBytes();

    /**
     * <code>optional double channel_longitude = 23;</code>
     */
    boolean hasChannelLongitude();
    /**
     * <code>optional double channel_longitude = 23;</code>
     */
    double getChannelLongitude();

    /**
     * <code>optional double channel_latitude = 24;</code>
     */
    boolean hasChannelLatitude();
    /**
     * <code>optional double channel_latitude = 24;</code>
     */
    double getChannelLatitude();

    /**
     * <code>optional int32 channel_direct = 25;</code>
     */
    boolean hasChannelDirect();
    /**
     * <code>optional int32 channel_direct = 25;</code>
     */
    int getChannelDirect();

    /**
     * <code>optional string channel_area = 26;</code>
     */
    boolean hasChannelArea();
    /**
     * <code>optional string channel_area = 26;</code>
     */
    java.lang.String getChannelArea();
    /**
     * <code>optional string channel_area = 26;</code>
     */
    com.google.protobuf.ByteString
        getChannelAreaBytes();

    /**
     * <code>optional int32 important = 27;</code>
     */
    boolean hasImportant();
    /**
     * <code>optional int32 important = 27;</code>
     */
    int getImportant();

    /**
     * <code>optional string sdk_ver = 28;</code>
     */
    boolean hasSdkVer();
    /**
     * <code>optional string sdk_ver = 28;</code>
     */
    java.lang.String getSdkVer();
    /**
     * <code>optional string sdk_ver = 28;</code>
     */
    com.google.protobuf.ByteString
        getSdkVerBytes();

    /**
     * <code>optional int32 max_yaw = 29;</code>
     */
    boolean hasMaxYaw();
    /**
     * <code>optional int32 max_yaw = 29;</code>
     */
    int getMaxYaw();

    /**
     * <code>optional int32 max_pitch = 30;</code>
     */
    boolean hasMaxPitch();
    /**
     * <code>optional int32 max_pitch = 30;</code>
     */
    int getMaxPitch();

    /**
     * <code>optional int32 max_roll = 31;</code>
     */
    boolean hasMaxRoll();
    /**
     * <code>optional int32 max_roll = 31;</code>
     */
    int getMaxRoll();
  }
  /**
   * Protobuf type {@code pbChannelInfoEx}
   */
  public  static final class pbChannelInfoEx extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pbChannelInfoEx)
      pbChannelInfoExOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use pbChannelInfoEx.newBuilder() to construct.
    private pbChannelInfoEx(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private pbChannelInfoEx() {
      uuid_ = "";
      channelUid_ = "";
      channelPsw_ = "";
      channelName_ = "";
      channelAddr_ = "";
      channelPort_ = 0;
      channelNo_ = "";
      channelType_ = 0;
      protocol_ = 0;
      minFaceWidth_ = 0;
      minImgQuality_ = 0;
      minCapDistance_ = 0;
      minConfidence_ = 0D;
      channelThreshold_ = 0D;
      capStat_ = 0;
      zoom_ = 0;
      maxFaceCount_ = 0;
      faceMerge_ = false;
      mergeAll_ = false;
      mergeThreshold_ = 0D;
      mergeTimeOut_ = 0;
      channelGuid_ = "";
      channelLongitude_ = 0D;
      channelLatitude_ = 0D;
      channelDirect_ = 0;
      channelArea_ = "";
      important_ = 0;
      sdkVer_ = "";
      maxYaw_ = 0;
      maxPitch_ = 0;
      maxRoll_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private pbChannelInfoEx(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              uuid_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              channelUid_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              channelPsw_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              channelName_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              channelAddr_ = bs;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              channelPort_ = input.readInt32();
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              channelNo_ = bs;
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              channelType_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              protocol_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              minFaceWidth_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              minImgQuality_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              minCapDistance_ = input.readInt32();
              break;
            }
            case 105: {
              bitField0_ |= 0x00001000;
              minConfidence_ = input.readDouble();
              break;
            }
            case 113: {
              bitField0_ |= 0x00002000;
              channelThreshold_ = input.readDouble();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              capStat_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              zoom_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              maxFaceCount_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              faceMerge_ = input.readBool();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              mergeAll_ = input.readBool();
              break;
            }
            case 161: {
              bitField0_ |= 0x00080000;
              mergeThreshold_ = input.readDouble();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              mergeTimeOut_ = input.readInt32();
              break;
            }
            case 178: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00200000;
              channelGuid_ = bs;
              break;
            }
            case 185: {
              bitField0_ |= 0x00400000;
              channelLongitude_ = input.readDouble();
              break;
            }
            case 193: {
              bitField0_ |= 0x00800000;
              channelLatitude_ = input.readDouble();
              break;
            }
            case 200: {
              bitField0_ |= 0x01000000;
              channelDirect_ = input.readInt32();
              break;
            }
            case 210: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x02000000;
              channelArea_ = bs;
              break;
            }
            case 216: {
              bitField0_ |= 0x04000000;
              important_ = input.readInt32();
              break;
            }
            case 226: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x08000000;
              sdkVer_ = bs;
              break;
            }
            case 232: {
              bitField0_ |= 0x10000000;
              maxYaw_ = input.readInt32();
              break;
            }
            case 240: {
              bitField0_ |= 0x20000000;
              maxPitch_ = input.readInt32();
              break;
            }
            case 248: {
              bitField0_ |= 0x40000000;
              maxRoll_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MQMsg.internal_static_pbChannelInfoEx_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MQMsg.internal_static_pbChannelInfoEx_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MQMsg.pbChannelInfoEx.class, MQMsg.pbChannelInfoEx.Builder.class);
    }

    private int bitField0_;
    public static final int UUID_FIELD_NUMBER = 1;
    private volatile java.lang.Object uuid_;
    /**
     * <code>required string uuid = 1;</code>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string uuid = 1;</code>
     */
    public java.lang.String getUuid() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uuid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string uuid = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUuidBytes() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANNEL_UID_FIELD_NUMBER = 2;
    private volatile java.lang.Object channelUid_;
    /**
     * <code>optional string channel_uid = 2;</code>
     */
    public boolean hasChannelUid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string channel_uid = 2;</code>
     */
    public java.lang.String getChannelUid() {
      java.lang.Object ref = channelUid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channelUid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string channel_uid = 2;</code>
     */
    public com.google.protobuf.ByteString
        getChannelUidBytes() {
      java.lang.Object ref = channelUid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channelUid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANNEL_PSW_FIELD_NUMBER = 3;
    private volatile java.lang.Object channelPsw_;
    /**
     * <code>optional string channel_psw = 3;</code>
     */
    public boolean hasChannelPsw() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string channel_psw = 3;</code>
     */
    public java.lang.String getChannelPsw() {
      java.lang.Object ref = channelPsw_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channelPsw_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string channel_psw = 3;</code>
     */
    public com.google.protobuf.ByteString
        getChannelPswBytes() {
      java.lang.Object ref = channelPsw_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channelPsw_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANNEL_NAME_FIELD_NUMBER = 4;
    private volatile java.lang.Object channelName_;
    /**
     * <code>optional string channel_name = 4;</code>
     */
    public boolean hasChannelName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string channel_name = 4;</code>
     */
    public java.lang.String getChannelName() {
      java.lang.Object ref = channelName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channelName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string channel_name = 4;</code>
     */
    public com.google.protobuf.ByteString
        getChannelNameBytes() {
      java.lang.Object ref = channelName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channelName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANNEL_ADDR_FIELD_NUMBER = 5;
    private volatile java.lang.Object channelAddr_;
    /**
     * <code>optional string channel_addr = 5;</code>
     */
    public boolean hasChannelAddr() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string channel_addr = 5;</code>
     */
    public java.lang.String getChannelAddr() {
      java.lang.Object ref = channelAddr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channelAddr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string channel_addr = 5;</code>
     */
    public com.google.protobuf.ByteString
        getChannelAddrBytes() {
      java.lang.Object ref = channelAddr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channelAddr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANNEL_PORT_FIELD_NUMBER = 6;
    private int channelPort_;
    /**
     * <code>optional int32 channel_port = 6;</code>
     */
    public boolean hasChannelPort() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 channel_port = 6;</code>
     */
    public int getChannelPort() {
      return channelPort_;
    }

    public static final int CHANNEL_NO_FIELD_NUMBER = 7;
    private volatile java.lang.Object channelNo_;
    /**
     * <code>optional string channel_no = 7;</code>
     */
    public boolean hasChannelNo() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string channel_no = 7;</code>
     */
    public java.lang.String getChannelNo() {
      java.lang.Object ref = channelNo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channelNo_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string channel_no = 7;</code>
     */
    public com.google.protobuf.ByteString
        getChannelNoBytes() {
      java.lang.Object ref = channelNo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channelNo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANNEL_TYPE_FIELD_NUMBER = 8;
    private int channelType_;
    /**
     * <code>optional int32 channel_type = 8;</code>
     */
    public boolean hasChannelType() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 channel_type = 8;</code>
     */
    public int getChannelType() {
      return channelType_;
    }

    public static final int PROTOCOL_FIELD_NUMBER = 9;
    private int protocol_;
    /**
     * <code>optional int32 protocol = 9;</code>
     */
    public boolean hasProtocol() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 protocol = 9;</code>
     */
    public int getProtocol() {
      return protocol_;
    }

    public static final int MIN_FACE_WIDTH_FIELD_NUMBER = 10;
    private int minFaceWidth_;
    /**
     * <code>optional int32 min_face_width = 10;</code>
     */
    public boolean hasMinFaceWidth() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 min_face_width = 10;</code>
     */
    public int getMinFaceWidth() {
      return minFaceWidth_;
    }

    public static final int MIN_IMG_QUALITY_FIELD_NUMBER = 11;
    private int minImgQuality_;
    /**
     * <code>optional int32 min_img_quality = 11;</code>
     */
    public boolean hasMinImgQuality() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 min_img_quality = 11;</code>
     */
    public int getMinImgQuality() {
      return minImgQuality_;
    }

    public static final int MIN_CAP_DISTANCE_FIELD_NUMBER = 12;
    private int minCapDistance_;
    /**
     * <code>optional int32 min_cap_distance = 12;</code>
     */
    public boolean hasMinCapDistance() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 min_cap_distance = 12;</code>
     */
    public int getMinCapDistance() {
      return minCapDistance_;
    }

    public static final int MIN_CONFIDENCE_FIELD_NUMBER = 13;
    private double minConfidence_;
    /**
     * <code>optional double min_confidence = 13;</code>
     */
    public boolean hasMinConfidence() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional double min_confidence = 13;</code>
     */
    public double getMinConfidence() {
      return minConfidence_;
    }

    public static final int CHANNEL_THRESHOLD_FIELD_NUMBER = 14;
    private double channelThreshold_;
    /**
     * <code>optional double channel_threshold = 14;</code>
     */
    public boolean hasChannelThreshold() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional double channel_threshold = 14;</code>
     */
    public double getChannelThreshold() {
      return channelThreshold_;
    }

    public static final int CAP_STAT_FIELD_NUMBER = 15;
    private int capStat_;
    /**
     * <code>optional int32 cap_stat = 15;</code>
     */
    public boolean hasCapStat() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 cap_stat = 15;</code>
     */
    public int getCapStat() {
      return capStat_;
    }

    public static final int ZOOM_FIELD_NUMBER = 16;
    private int zoom_;
    /**
     * <code>optional int32 zoom = 16;</code>
     */
    public boolean hasZoom() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 zoom = 16;</code>
     */
    public int getZoom() {
      return zoom_;
    }

    public static final int MAX_FACE_COUNT_FIELD_NUMBER = 17;
    private int maxFaceCount_;
    /**
     * <code>optional int32 max_face_count = 17;</code>
     */
    public boolean hasMaxFaceCount() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 max_face_count = 17;</code>
     */
    public int getMaxFaceCount() {
      return maxFaceCount_;
    }

    public static final int FACE_MERGE_FIELD_NUMBER = 18;
    private boolean faceMerge_;
    /**
     * <code>optional bool face_merge = 18;</code>
     */
    public boolean hasFaceMerge() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional bool face_merge = 18;</code>
     */
    public boolean getFaceMerge() {
      return faceMerge_;
    }

    public static final int MERGE_ALL_FIELD_NUMBER = 19;
    private boolean mergeAll_;
    /**
     * <code>optional bool merge_all = 19;</code>
     */
    public boolean hasMergeAll() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional bool merge_all = 19;</code>
     */
    public boolean getMergeAll() {
      return mergeAll_;
    }

    public static final int MERGE_THRESHOLD_FIELD_NUMBER = 20;
    private double mergeThreshold_;
    /**
     * <code>optional double merge_threshold = 20;</code>
     */
    public boolean hasMergeThreshold() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional double merge_threshold = 20;</code>
     */
    public double getMergeThreshold() {
      return mergeThreshold_;
    }

    public static final int MERGE_TIME_OUT_FIELD_NUMBER = 21;
    private int mergeTimeOut_;
    /**
     * <code>optional int32 merge_time_out = 21;</code>
     */
    public boolean hasMergeTimeOut() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 merge_time_out = 21;</code>
     */
    public int getMergeTimeOut() {
      return mergeTimeOut_;
    }

    public static final int CHANNEL_GUID_FIELD_NUMBER = 22;
    private volatile java.lang.Object channelGuid_;
    /**
     * <code>optional string channel_guid = 22;</code>
     */
    public boolean hasChannelGuid() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional string channel_guid = 22;</code>
     */
    public java.lang.String getChannelGuid() {
      java.lang.Object ref = channelGuid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channelGuid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string channel_guid = 22;</code>
     */
    public com.google.protobuf.ByteString
        getChannelGuidBytes() {
      java.lang.Object ref = channelGuid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channelGuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANNEL_LONGITUDE_FIELD_NUMBER = 23;
    private double channelLongitude_;
    /**
     * <code>optional double channel_longitude = 23;</code>
     */
    public boolean hasChannelLongitude() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional double channel_longitude = 23;</code>
     */
    public double getChannelLongitude() {
      return channelLongitude_;
    }

    public static final int CHANNEL_LATITUDE_FIELD_NUMBER = 24;
    private double channelLatitude_;
    /**
     * <code>optional double channel_latitude = 24;</code>
     */
    public boolean hasChannelLatitude() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional double channel_latitude = 24;</code>
     */
    public double getChannelLatitude() {
      return channelLatitude_;
    }

    public static final int CHANNEL_DIRECT_FIELD_NUMBER = 25;
    private int channelDirect_;
    /**
     * <code>optional int32 channel_direct = 25;</code>
     */
    public boolean hasChannelDirect() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int32 channel_direct = 25;</code>
     */
    public int getChannelDirect() {
      return channelDirect_;
    }

    public static final int CHANNEL_AREA_FIELD_NUMBER = 26;
    private volatile java.lang.Object channelArea_;
    /**
     * <code>optional string channel_area = 26;</code>
     */
    public boolean hasChannelArea() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional string channel_area = 26;</code>
     */
    public java.lang.String getChannelArea() {
      java.lang.Object ref = channelArea_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channelArea_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string channel_area = 26;</code>
     */
    public com.google.protobuf.ByteString
        getChannelAreaBytes() {
      java.lang.Object ref = channelArea_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channelArea_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IMPORTANT_FIELD_NUMBER = 27;
    private int important_;
    /**
     * <code>optional int32 important = 27;</code>
     */
    public boolean hasImportant() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int32 important = 27;</code>
     */
    public int getImportant() {
      return important_;
    }

    public static final int SDK_VER_FIELD_NUMBER = 28;
    private volatile java.lang.Object sdkVer_;
    /**
     * <code>optional string sdk_ver = 28;</code>
     */
    public boolean hasSdkVer() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional string sdk_ver = 28;</code>
     */
    public java.lang.String getSdkVer() {
      java.lang.Object ref = sdkVer_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sdkVer_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string sdk_ver = 28;</code>
     */
    public com.google.protobuf.ByteString
        getSdkVerBytes() {
      java.lang.Object ref = sdkVer_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sdkVer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MAX_YAW_FIELD_NUMBER = 29;
    private int maxYaw_;
    /**
     * <code>optional int32 max_yaw = 29;</code>
     */
    public boolean hasMaxYaw() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int32 max_yaw = 29;</code>
     */
    public int getMaxYaw() {
      return maxYaw_;
    }

    public static final int MAX_PITCH_FIELD_NUMBER = 30;
    private int maxPitch_;
    /**
     * <code>optional int32 max_pitch = 30;</code>
     */
    public boolean hasMaxPitch() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional int32 max_pitch = 30;</code>
     */
    public int getMaxPitch() {
      return maxPitch_;
    }

    public static final int MAX_ROLL_FIELD_NUMBER = 31;
    private int maxRoll_;
    /**
     * <code>optional int32 max_roll = 31;</code>
     */
    public boolean hasMaxRoll() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional int32 max_roll = 31;</code>
     */
    public int getMaxRoll() {
      return maxRoll_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasUuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, channelUid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, channelPsw_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, channelName_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, channelAddr_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, channelPort_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, channelNo_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, channelType_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, protocol_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, minFaceWidth_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, minImgQuality_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, minCapDistance_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeDouble(13, minConfidence_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeDouble(14, channelThreshold_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, capStat_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, zoom_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(17, maxFaceCount_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeBool(18, faceMerge_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeBool(19, mergeAll_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeDouble(20, mergeThreshold_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(21, mergeTimeOut_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 22, channelGuid_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeDouble(23, channelLongitude_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeDouble(24, channelLatitude_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(25, channelDirect_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 26, channelArea_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeInt32(27, important_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 28, sdkVer_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(29, maxYaw_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeInt32(30, maxPitch_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeInt32(31, maxRoll_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, channelUid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, channelPsw_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, channelName_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, channelAddr_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, channelPort_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, channelNo_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, channelType_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, protocol_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, minFaceWidth_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, minImgQuality_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, minCapDistance_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, minConfidence_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(14, channelThreshold_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, capStat_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, zoom_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, maxFaceCount_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, faceMerge_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(19, mergeAll_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(20, mergeThreshold_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, mergeTimeOut_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(22, channelGuid_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(23, channelLongitude_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(24, channelLatitude_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, channelDirect_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(26, channelArea_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(27, important_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(28, sdkVer_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(29, maxYaw_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(30, maxPitch_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(31, maxRoll_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MQMsg.pbChannelInfoEx)) {
        return super.equals(obj);
      }
      MQMsg.pbChannelInfoEx other = (MQMsg.pbChannelInfoEx) obj;

      boolean result = true;
      result = result && (hasUuid() == other.hasUuid());
      if (hasUuid()) {
        result = result && getUuid()
            .equals(other.getUuid());
      }
      result = result && (hasChannelUid() == other.hasChannelUid());
      if (hasChannelUid()) {
        result = result && getChannelUid()
            .equals(other.getChannelUid());
      }
      result = result && (hasChannelPsw() == other.hasChannelPsw());
      if (hasChannelPsw()) {
        result = result && getChannelPsw()
            .equals(other.getChannelPsw());
      }
      result = result && (hasChannelName() == other.hasChannelName());
      if (hasChannelName()) {
        result = result && getChannelName()
            .equals(other.getChannelName());
      }
      result = result && (hasChannelAddr() == other.hasChannelAddr());
      if (hasChannelAddr()) {
        result = result && getChannelAddr()
            .equals(other.getChannelAddr());
      }
      result = result && (hasChannelPort() == other.hasChannelPort());
      if (hasChannelPort()) {
        result = result && (getChannelPort()
            == other.getChannelPort());
      }
      result = result && (hasChannelNo() == other.hasChannelNo());
      if (hasChannelNo()) {
        result = result && getChannelNo()
            .equals(other.getChannelNo());
      }
      result = result && (hasChannelType() == other.hasChannelType());
      if (hasChannelType()) {
        result = result && (getChannelType()
            == other.getChannelType());
      }
      result = result && (hasProtocol() == other.hasProtocol());
      if (hasProtocol()) {
        result = result && (getProtocol()
            == other.getProtocol());
      }
      result = result && (hasMinFaceWidth() == other.hasMinFaceWidth());
      if (hasMinFaceWidth()) {
        result = result && (getMinFaceWidth()
            == other.getMinFaceWidth());
      }
      result = result && (hasMinImgQuality() == other.hasMinImgQuality());
      if (hasMinImgQuality()) {
        result = result && (getMinImgQuality()
            == other.getMinImgQuality());
      }
      result = result && (hasMinCapDistance() == other.hasMinCapDistance());
      if (hasMinCapDistance()) {
        result = result && (getMinCapDistance()
            == other.getMinCapDistance());
      }
      result = result && (hasMinConfidence() == other.hasMinConfidence());
      if (hasMinConfidence()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getMinConfidence())
            == java.lang.Double.doubleToLongBits(
                other.getMinConfidence()));
      }
      result = result && (hasChannelThreshold() == other.hasChannelThreshold());
      if (hasChannelThreshold()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getChannelThreshold())
            == java.lang.Double.doubleToLongBits(
                other.getChannelThreshold()));
      }
      result = result && (hasCapStat() == other.hasCapStat());
      if (hasCapStat()) {
        result = result && (getCapStat()
            == other.getCapStat());
      }
      result = result && (hasZoom() == other.hasZoom());
      if (hasZoom()) {
        result = result && (getZoom()
            == other.getZoom());
      }
      result = result && (hasMaxFaceCount() == other.hasMaxFaceCount());
      if (hasMaxFaceCount()) {
        result = result && (getMaxFaceCount()
            == other.getMaxFaceCount());
      }
      result = result && (hasFaceMerge() == other.hasFaceMerge());
      if (hasFaceMerge()) {
        result = result && (getFaceMerge()
            == other.getFaceMerge());
      }
      result = result && (hasMergeAll() == other.hasMergeAll());
      if (hasMergeAll()) {
        result = result && (getMergeAll()
            == other.getMergeAll());
      }
      result = result && (hasMergeThreshold() == other.hasMergeThreshold());
      if (hasMergeThreshold()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getMergeThreshold())
            == java.lang.Double.doubleToLongBits(
                other.getMergeThreshold()));
      }
      result = result && (hasMergeTimeOut() == other.hasMergeTimeOut());
      if (hasMergeTimeOut()) {
        result = result && (getMergeTimeOut()
            == other.getMergeTimeOut());
      }
      result = result && (hasChannelGuid() == other.hasChannelGuid());
      if (hasChannelGuid()) {
        result = result && getChannelGuid()
            .equals(other.getChannelGuid());
      }
      result = result && (hasChannelLongitude() == other.hasChannelLongitude());
      if (hasChannelLongitude()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getChannelLongitude())
            == java.lang.Double.doubleToLongBits(
                other.getChannelLongitude()));
      }
      result = result && (hasChannelLatitude() == other.hasChannelLatitude());
      if (hasChannelLatitude()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getChannelLatitude())
            == java.lang.Double.doubleToLongBits(
                other.getChannelLatitude()));
      }
      result = result && (hasChannelDirect() == other.hasChannelDirect());
      if (hasChannelDirect()) {
        result = result && (getChannelDirect()
            == other.getChannelDirect());
      }
      result = result && (hasChannelArea() == other.hasChannelArea());
      if (hasChannelArea()) {
        result = result && getChannelArea()
            .equals(other.getChannelArea());
      }
      result = result && (hasImportant() == other.hasImportant());
      if (hasImportant()) {
        result = result && (getImportant()
            == other.getImportant());
      }
      result = result && (hasSdkVer() == other.hasSdkVer());
      if (hasSdkVer()) {
        result = result && getSdkVer()
            .equals(other.getSdkVer());
      }
      result = result && (hasMaxYaw() == other.hasMaxYaw());
      if (hasMaxYaw()) {
        result = result && (getMaxYaw()
            == other.getMaxYaw());
      }
      result = result && (hasMaxPitch() == other.hasMaxPitch());
      if (hasMaxPitch()) {
        result = result && (getMaxPitch()
            == other.getMaxPitch());
      }
      result = result && (hasMaxRoll() == other.hasMaxRoll());
      if (hasMaxRoll()) {
        result = result && (getMaxRoll()
            == other.getMaxRoll());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasUuid()) {
        hash = (37 * hash) + UUID_FIELD_NUMBER;
        hash = (53 * hash) + getUuid().hashCode();
      }
      if (hasChannelUid()) {
        hash = (37 * hash) + CHANNEL_UID_FIELD_NUMBER;
        hash = (53 * hash) + getChannelUid().hashCode();
      }
      if (hasChannelPsw()) {
        hash = (37 * hash) + CHANNEL_PSW_FIELD_NUMBER;
        hash = (53 * hash) + getChannelPsw().hashCode();
      }
      if (hasChannelName()) {
        hash = (37 * hash) + CHANNEL_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getChannelName().hashCode();
      }
      if (hasChannelAddr()) {
        hash = (37 * hash) + CHANNEL_ADDR_FIELD_NUMBER;
        hash = (53 * hash) + getChannelAddr().hashCode();
      }
      if (hasChannelPort()) {
        hash = (37 * hash) + CHANNEL_PORT_FIELD_NUMBER;
        hash = (53 * hash) + getChannelPort();
      }
      if (hasChannelNo()) {
        hash = (37 * hash) + CHANNEL_NO_FIELD_NUMBER;
        hash = (53 * hash) + getChannelNo().hashCode();
      }
      if (hasChannelType()) {
        hash = (37 * hash) + CHANNEL_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getChannelType();
      }
      if (hasProtocol()) {
        hash = (37 * hash) + PROTOCOL_FIELD_NUMBER;
        hash = (53 * hash) + getProtocol();
      }
      if (hasMinFaceWidth()) {
        hash = (37 * hash) + MIN_FACE_WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getMinFaceWidth();
      }
      if (hasMinImgQuality()) {
        hash = (37 * hash) + MIN_IMG_QUALITY_FIELD_NUMBER;
        hash = (53 * hash) + getMinImgQuality();
      }
      if (hasMinCapDistance()) {
        hash = (37 * hash) + MIN_CAP_DISTANCE_FIELD_NUMBER;
        hash = (53 * hash) + getMinCapDistance();
      }
      if (hasMinConfidence()) {
        hash = (37 * hash) + MIN_CONFIDENCE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMinConfidence()));
      }
      if (hasChannelThreshold()) {
        hash = (37 * hash) + CHANNEL_THRESHOLD_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getChannelThreshold()));
      }
      if (hasCapStat()) {
        hash = (37 * hash) + CAP_STAT_FIELD_NUMBER;
        hash = (53 * hash) + getCapStat();
      }
      if (hasZoom()) {
        hash = (37 * hash) + ZOOM_FIELD_NUMBER;
        hash = (53 * hash) + getZoom();
      }
      if (hasMaxFaceCount()) {
        hash = (37 * hash) + MAX_FACE_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getMaxFaceCount();
      }
      if (hasFaceMerge()) {
        hash = (37 * hash) + FACE_MERGE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getFaceMerge());
      }
      if (hasMergeAll()) {
        hash = (37 * hash) + MERGE_ALL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getMergeAll());
      }
      if (hasMergeThreshold()) {
        hash = (37 * hash) + MERGE_THRESHOLD_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMergeThreshold()));
      }
      if (hasMergeTimeOut()) {
        hash = (37 * hash) + MERGE_TIME_OUT_FIELD_NUMBER;
        hash = (53 * hash) + getMergeTimeOut();
      }
      if (hasChannelGuid()) {
        hash = (37 * hash) + CHANNEL_GUID_FIELD_NUMBER;
        hash = (53 * hash) + getChannelGuid().hashCode();
      }
      if (hasChannelLongitude()) {
        hash = (37 * hash) + CHANNEL_LONGITUDE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getChannelLongitude()));
      }
      if (hasChannelLatitude()) {
        hash = (37 * hash) + CHANNEL_LATITUDE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getChannelLatitude()));
      }
      if (hasChannelDirect()) {
        hash = (37 * hash) + CHANNEL_DIRECT_FIELD_NUMBER;
        hash = (53 * hash) + getChannelDirect();
      }
      if (hasChannelArea()) {
        hash = (37 * hash) + CHANNEL_AREA_FIELD_NUMBER;
        hash = (53 * hash) + getChannelArea().hashCode();
      }
      if (hasImportant()) {
        hash = (37 * hash) + IMPORTANT_FIELD_NUMBER;
        hash = (53 * hash) + getImportant();
      }
      if (hasSdkVer()) {
        hash = (37 * hash) + SDK_VER_FIELD_NUMBER;
        hash = (53 * hash) + getSdkVer().hashCode();
      }
      if (hasMaxYaw()) {
        hash = (37 * hash) + MAX_YAW_FIELD_NUMBER;
        hash = (53 * hash) + getMaxYaw();
      }
      if (hasMaxPitch()) {
        hash = (37 * hash) + MAX_PITCH_FIELD_NUMBER;
        hash = (53 * hash) + getMaxPitch();
      }
      if (hasMaxRoll()) {
        hash = (37 * hash) + MAX_ROLL_FIELD_NUMBER;
        hash = (53 * hash) + getMaxRoll();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MQMsg.pbChannelInfoEx parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MQMsg.pbChannelInfoEx parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MQMsg.pbChannelInfoEx parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MQMsg.pbChannelInfoEx parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MQMsg.pbChannelInfoEx parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MQMsg.pbChannelInfoEx parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MQMsg.pbChannelInfoEx parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MQMsg.pbChannelInfoEx parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MQMsg.pbChannelInfoEx parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MQMsg.pbChannelInfoEx parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MQMsg.pbChannelInfoEx parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MQMsg.pbChannelInfoEx parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MQMsg.pbChannelInfoEx prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pbChannelInfoEx}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pbChannelInfoEx)
        MQMsg.pbChannelInfoExOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MQMsg.internal_static_pbChannelInfoEx_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MQMsg.internal_static_pbChannelInfoEx_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MQMsg.pbChannelInfoEx.class, MQMsg.pbChannelInfoEx.Builder.class);
      }

      // Construct using MQMsg.pbChannelInfoEx.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        uuid_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        channelUid_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        channelPsw_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        channelName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        channelAddr_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        channelPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        channelNo_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        channelType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        protocol_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        minFaceWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        minImgQuality_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        minCapDistance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        minConfidence_ = 0D;
        bitField0_ = (bitField0_ & ~0x00001000);
        channelThreshold_ = 0D;
        bitField0_ = (bitField0_ & ~0x00002000);
        capStat_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        zoom_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        maxFaceCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        faceMerge_ = false;
        bitField0_ = (bitField0_ & ~0x00020000);
        mergeAll_ = false;
        bitField0_ = (bitField0_ & ~0x00040000);
        mergeThreshold_ = 0D;
        bitField0_ = (bitField0_ & ~0x00080000);
        mergeTimeOut_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        channelGuid_ = "";
        bitField0_ = (bitField0_ & ~0x00200000);
        channelLongitude_ = 0D;
        bitField0_ = (bitField0_ & ~0x00400000);
        channelLatitude_ = 0D;
        bitField0_ = (bitField0_ & ~0x00800000);
        channelDirect_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        channelArea_ = "";
        bitField0_ = (bitField0_ & ~0x02000000);
        important_ = 0;
        bitField0_ = (bitField0_ & ~0x04000000);
        sdkVer_ = "";
        bitField0_ = (bitField0_ & ~0x08000000);
        maxYaw_ = 0;
        bitField0_ = (bitField0_ & ~0x10000000);
        maxPitch_ = 0;
        bitField0_ = (bitField0_ & ~0x20000000);
        maxRoll_ = 0;
        bitField0_ = (bitField0_ & ~0x40000000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MQMsg.internal_static_pbChannelInfoEx_descriptor;
      }

      public MQMsg.pbChannelInfoEx getDefaultInstanceForType() {
        return MQMsg.pbChannelInfoEx.getDefaultInstance();
      }

      public MQMsg.pbChannelInfoEx build() {
        MQMsg.pbChannelInfoEx result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MQMsg.pbChannelInfoEx buildPartial() {
        MQMsg.pbChannelInfoEx result = new MQMsg.pbChannelInfoEx(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.channelUid_ = channelUid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.channelPsw_ = channelPsw_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.channelName_ = channelName_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.channelAddr_ = channelAddr_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.channelPort_ = channelPort_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.channelNo_ = channelNo_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.channelType_ = channelType_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.protocol_ = protocol_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.minFaceWidth_ = minFaceWidth_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.minImgQuality_ = minImgQuality_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.minCapDistance_ = minCapDistance_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.minConfidence_ = minConfidence_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.channelThreshold_ = channelThreshold_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.capStat_ = capStat_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.zoom_ = zoom_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.maxFaceCount_ = maxFaceCount_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.faceMerge_ = faceMerge_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.mergeAll_ = mergeAll_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.mergeThreshold_ = mergeThreshold_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.mergeTimeOut_ = mergeTimeOut_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.channelGuid_ = channelGuid_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.channelLongitude_ = channelLongitude_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.channelLatitude_ = channelLatitude_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.channelDirect_ = channelDirect_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.channelArea_ = channelArea_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.important_ = important_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.sdkVer_ = sdkVer_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.maxYaw_ = maxYaw_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.maxPitch_ = maxPitch_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.maxRoll_ = maxRoll_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MQMsg.pbChannelInfoEx) {
          return mergeFrom((MQMsg.pbChannelInfoEx)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MQMsg.pbChannelInfoEx other) {
        if (other == MQMsg.pbChannelInfoEx.getDefaultInstance()) return this;
        if (other.hasUuid()) {
          bitField0_ |= 0x00000001;
          uuid_ = other.uuid_;
          onChanged();
        }
        if (other.hasChannelUid()) {
          bitField0_ |= 0x00000002;
          channelUid_ = other.channelUid_;
          onChanged();
        }
        if (other.hasChannelPsw()) {
          bitField0_ |= 0x00000004;
          channelPsw_ = other.channelPsw_;
          onChanged();
        }
        if (other.hasChannelName()) {
          bitField0_ |= 0x00000008;
          channelName_ = other.channelName_;
          onChanged();
        }
        if (other.hasChannelAddr()) {
          bitField0_ |= 0x00000010;
          channelAddr_ = other.channelAddr_;
          onChanged();
        }
        if (other.hasChannelPort()) {
          setChannelPort(other.getChannelPort());
        }
        if (other.hasChannelNo()) {
          bitField0_ |= 0x00000040;
          channelNo_ = other.channelNo_;
          onChanged();
        }
        if (other.hasChannelType()) {
          setChannelType(other.getChannelType());
        }
        if (other.hasProtocol()) {
          setProtocol(other.getProtocol());
        }
        if (other.hasMinFaceWidth()) {
          setMinFaceWidth(other.getMinFaceWidth());
        }
        if (other.hasMinImgQuality()) {
          setMinImgQuality(other.getMinImgQuality());
        }
        if (other.hasMinCapDistance()) {
          setMinCapDistance(other.getMinCapDistance());
        }
        if (other.hasMinConfidence()) {
          setMinConfidence(other.getMinConfidence());
        }
        if (other.hasChannelThreshold()) {
          setChannelThreshold(other.getChannelThreshold());
        }
        if (other.hasCapStat()) {
          setCapStat(other.getCapStat());
        }
        if (other.hasZoom()) {
          setZoom(other.getZoom());
        }
        if (other.hasMaxFaceCount()) {
          setMaxFaceCount(other.getMaxFaceCount());
        }
        if (other.hasFaceMerge()) {
          setFaceMerge(other.getFaceMerge());
        }
        if (other.hasMergeAll()) {
          setMergeAll(other.getMergeAll());
        }
        if (other.hasMergeThreshold()) {
          setMergeThreshold(other.getMergeThreshold());
        }
        if (other.hasMergeTimeOut()) {
          setMergeTimeOut(other.getMergeTimeOut());
        }
        if (other.hasChannelGuid()) {
          bitField0_ |= 0x00200000;
          channelGuid_ = other.channelGuid_;
          onChanged();
        }
        if (other.hasChannelLongitude()) {
          setChannelLongitude(other.getChannelLongitude());
        }
        if (other.hasChannelLatitude()) {
          setChannelLatitude(other.getChannelLatitude());
        }
        if (other.hasChannelDirect()) {
          setChannelDirect(other.getChannelDirect());
        }
        if (other.hasChannelArea()) {
          bitField0_ |= 0x02000000;
          channelArea_ = other.channelArea_;
          onChanged();
        }
        if (other.hasImportant()) {
          setImportant(other.getImportant());
        }
        if (other.hasSdkVer()) {
          bitField0_ |= 0x08000000;
          sdkVer_ = other.sdkVer_;
          onChanged();
        }
        if (other.hasMaxYaw()) {
          setMaxYaw(other.getMaxYaw());
        }
        if (other.hasMaxPitch()) {
          setMaxPitch(other.getMaxPitch());
        }
        if (other.hasMaxRoll()) {
          setMaxRoll(other.getMaxRoll());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUuid()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MQMsg.pbChannelInfoEx parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MQMsg.pbChannelInfoEx) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object uuid_ = "";
      /**
       * <code>required string uuid = 1;</code>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string uuid = 1;</code>
       */
      public java.lang.String getUuid() {
        java.lang.Object ref = uuid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            uuid_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string uuid = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUuidBytes() {
        java.lang.Object ref = uuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string uuid = 1;</code>
       */
      public Builder setUuid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string uuid = 1;</code>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uuid_ = getDefaultInstance().getUuid();
        onChanged();
        return this;
      }
      /**
       * <code>required string uuid = 1;</code>
       */
      public Builder setUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        uuid_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object channelUid_ = "";
      /**
       * <code>optional string channel_uid = 2;</code>
       */
      public boolean hasChannelUid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string channel_uid = 2;</code>
       */
      public java.lang.String getChannelUid() {
        java.lang.Object ref = channelUid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            channelUid_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string channel_uid = 2;</code>
       */
      public com.google.protobuf.ByteString
          getChannelUidBytes() {
        java.lang.Object ref = channelUid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channelUid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string channel_uid = 2;</code>
       */
      public Builder setChannelUid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        channelUid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel_uid = 2;</code>
       */
      public Builder clearChannelUid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        channelUid_ = getDefaultInstance().getChannelUid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel_uid = 2;</code>
       */
      public Builder setChannelUidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        channelUid_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object channelPsw_ = "";
      /**
       * <code>optional string channel_psw = 3;</code>
       */
      public boolean hasChannelPsw() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string channel_psw = 3;</code>
       */
      public java.lang.String getChannelPsw() {
        java.lang.Object ref = channelPsw_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            channelPsw_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string channel_psw = 3;</code>
       */
      public com.google.protobuf.ByteString
          getChannelPswBytes() {
        java.lang.Object ref = channelPsw_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channelPsw_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string channel_psw = 3;</code>
       */
      public Builder setChannelPsw(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        channelPsw_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel_psw = 3;</code>
       */
      public Builder clearChannelPsw() {
        bitField0_ = (bitField0_ & ~0x00000004);
        channelPsw_ = getDefaultInstance().getChannelPsw();
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel_psw = 3;</code>
       */
      public Builder setChannelPswBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        channelPsw_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object channelName_ = "";
      /**
       * <code>optional string channel_name = 4;</code>
       */
      public boolean hasChannelName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string channel_name = 4;</code>
       */
      public java.lang.String getChannelName() {
        java.lang.Object ref = channelName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            channelName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string channel_name = 4;</code>
       */
      public com.google.protobuf.ByteString
          getChannelNameBytes() {
        java.lang.Object ref = channelName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channelName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string channel_name = 4;</code>
       */
      public Builder setChannelName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        channelName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel_name = 4;</code>
       */
      public Builder clearChannelName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        channelName_ = getDefaultInstance().getChannelName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel_name = 4;</code>
       */
      public Builder setChannelNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        channelName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object channelAddr_ = "";
      /**
       * <code>optional string channel_addr = 5;</code>
       */
      public boolean hasChannelAddr() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string channel_addr = 5;</code>
       */
      public java.lang.String getChannelAddr() {
        java.lang.Object ref = channelAddr_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            channelAddr_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string channel_addr = 5;</code>
       */
      public com.google.protobuf.ByteString
          getChannelAddrBytes() {
        java.lang.Object ref = channelAddr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channelAddr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string channel_addr = 5;</code>
       */
      public Builder setChannelAddr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        channelAddr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel_addr = 5;</code>
       */
      public Builder clearChannelAddr() {
        bitField0_ = (bitField0_ & ~0x00000010);
        channelAddr_ = getDefaultInstance().getChannelAddr();
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel_addr = 5;</code>
       */
      public Builder setChannelAddrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        channelAddr_ = value;
        onChanged();
        return this;
      }

      private int channelPort_ ;
      /**
       * <code>optional int32 channel_port = 6;</code>
       */
      public boolean hasChannelPort() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 channel_port = 6;</code>
       */
      public int getChannelPort() {
        return channelPort_;
      }
      /**
       * <code>optional int32 channel_port = 6;</code>
       */
      public Builder setChannelPort(int value) {
        bitField0_ |= 0x00000020;
        channelPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 channel_port = 6;</code>
       */
      public Builder clearChannelPort() {
        bitField0_ = (bitField0_ & ~0x00000020);
        channelPort_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object channelNo_ = "";
      /**
       * <code>optional string channel_no = 7;</code>
       */
      public boolean hasChannelNo() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string channel_no = 7;</code>
       */
      public java.lang.String getChannelNo() {
        java.lang.Object ref = channelNo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            channelNo_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string channel_no = 7;</code>
       */
      public com.google.protobuf.ByteString
          getChannelNoBytes() {
        java.lang.Object ref = channelNo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channelNo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string channel_no = 7;</code>
       */
      public Builder setChannelNo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        channelNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel_no = 7;</code>
       */
      public Builder clearChannelNo() {
        bitField0_ = (bitField0_ & ~0x00000040);
        channelNo_ = getDefaultInstance().getChannelNo();
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel_no = 7;</code>
       */
      public Builder setChannelNoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        channelNo_ = value;
        onChanged();
        return this;
      }

      private int channelType_ ;
      /**
       * <code>optional int32 channel_type = 8;</code>
       */
      public boolean hasChannelType() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 channel_type = 8;</code>
       */
      public int getChannelType() {
        return channelType_;
      }
      /**
       * <code>optional int32 channel_type = 8;</code>
       */
      public Builder setChannelType(int value) {
        bitField0_ |= 0x00000080;
        channelType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 channel_type = 8;</code>
       */
      public Builder clearChannelType() {
        bitField0_ = (bitField0_ & ~0x00000080);
        channelType_ = 0;
        onChanged();
        return this;
      }

      private int protocol_ ;
      /**
       * <code>optional int32 protocol = 9;</code>
       */
      public boolean hasProtocol() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 protocol = 9;</code>
       */
      public int getProtocol() {
        return protocol_;
      }
      /**
       * <code>optional int32 protocol = 9;</code>
       */
      public Builder setProtocol(int value) {
        bitField0_ |= 0x00000100;
        protocol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 protocol = 9;</code>
       */
      public Builder clearProtocol() {
        bitField0_ = (bitField0_ & ~0x00000100);
        protocol_ = 0;
        onChanged();
        return this;
      }

      private int minFaceWidth_ ;
      /**
       * <code>optional int32 min_face_width = 10;</code>
       */
      public boolean hasMinFaceWidth() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 min_face_width = 10;</code>
       */
      public int getMinFaceWidth() {
        return minFaceWidth_;
      }
      /**
       * <code>optional int32 min_face_width = 10;</code>
       */
      public Builder setMinFaceWidth(int value) {
        bitField0_ |= 0x00000200;
        minFaceWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 min_face_width = 10;</code>
       */
      public Builder clearMinFaceWidth() {
        bitField0_ = (bitField0_ & ~0x00000200);
        minFaceWidth_ = 0;
        onChanged();
        return this;
      }

      private int minImgQuality_ ;
      /**
       * <code>optional int32 min_img_quality = 11;</code>
       */
      public boolean hasMinImgQuality() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 min_img_quality = 11;</code>
       */
      public int getMinImgQuality() {
        return minImgQuality_;
      }
      /**
       * <code>optional int32 min_img_quality = 11;</code>
       */
      public Builder setMinImgQuality(int value) {
        bitField0_ |= 0x00000400;
        minImgQuality_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 min_img_quality = 11;</code>
       */
      public Builder clearMinImgQuality() {
        bitField0_ = (bitField0_ & ~0x00000400);
        minImgQuality_ = 0;
        onChanged();
        return this;
      }

      private int minCapDistance_ ;
      /**
       * <code>optional int32 min_cap_distance = 12;</code>
       */
      public boolean hasMinCapDistance() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 min_cap_distance = 12;</code>
       */
      public int getMinCapDistance() {
        return minCapDistance_;
      }
      /**
       * <code>optional int32 min_cap_distance = 12;</code>
       */
      public Builder setMinCapDistance(int value) {
        bitField0_ |= 0x00000800;
        minCapDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 min_cap_distance = 12;</code>
       */
      public Builder clearMinCapDistance() {
        bitField0_ = (bitField0_ & ~0x00000800);
        minCapDistance_ = 0;
        onChanged();
        return this;
      }

      private double minConfidence_ ;
      /**
       * <code>optional double min_confidence = 13;</code>
       */
      public boolean hasMinConfidence() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional double min_confidence = 13;</code>
       */
      public double getMinConfidence() {
        return minConfidence_;
      }
      /**
       * <code>optional double min_confidence = 13;</code>
       */
      public Builder setMinConfidence(double value) {
        bitField0_ |= 0x00001000;
        minConfidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double min_confidence = 13;</code>
       */
      public Builder clearMinConfidence() {
        bitField0_ = (bitField0_ & ~0x00001000);
        minConfidence_ = 0D;
        onChanged();
        return this;
      }

      private double channelThreshold_ ;
      /**
       * <code>optional double channel_threshold = 14;</code>
       */
      public boolean hasChannelThreshold() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional double channel_threshold = 14;</code>
       */
      public double getChannelThreshold() {
        return channelThreshold_;
      }
      /**
       * <code>optional double channel_threshold = 14;</code>
       */
      public Builder setChannelThreshold(double value) {
        bitField0_ |= 0x00002000;
        channelThreshold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double channel_threshold = 14;</code>
       */
      public Builder clearChannelThreshold() {
        bitField0_ = (bitField0_ & ~0x00002000);
        channelThreshold_ = 0D;
        onChanged();
        return this;
      }

      private int capStat_ ;
      /**
       * <code>optional int32 cap_stat = 15;</code>
       */
      public boolean hasCapStat() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 cap_stat = 15;</code>
       */
      public int getCapStat() {
        return capStat_;
      }
      /**
       * <code>optional int32 cap_stat = 15;</code>
       */
      public Builder setCapStat(int value) {
        bitField0_ |= 0x00004000;
        capStat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cap_stat = 15;</code>
       */
      public Builder clearCapStat() {
        bitField0_ = (bitField0_ & ~0x00004000);
        capStat_ = 0;
        onChanged();
        return this;
      }

      private int zoom_ ;
      /**
       * <code>optional int32 zoom = 16;</code>
       */
      public boolean hasZoom() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 zoom = 16;</code>
       */
      public int getZoom() {
        return zoom_;
      }
      /**
       * <code>optional int32 zoom = 16;</code>
       */
      public Builder setZoom(int value) {
        bitField0_ |= 0x00008000;
        zoom_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 zoom = 16;</code>
       */
      public Builder clearZoom() {
        bitField0_ = (bitField0_ & ~0x00008000);
        zoom_ = 0;
        onChanged();
        return this;
      }

      private int maxFaceCount_ ;
      /**
       * <code>optional int32 max_face_count = 17;</code>
       */
      public boolean hasMaxFaceCount() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 max_face_count = 17;</code>
       */
      public int getMaxFaceCount() {
        return maxFaceCount_;
      }
      /**
       * <code>optional int32 max_face_count = 17;</code>
       */
      public Builder setMaxFaceCount(int value) {
        bitField0_ |= 0x00010000;
        maxFaceCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 max_face_count = 17;</code>
       */
      public Builder clearMaxFaceCount() {
        bitField0_ = (bitField0_ & ~0x00010000);
        maxFaceCount_ = 0;
        onChanged();
        return this;
      }

      private boolean faceMerge_ ;
      /**
       * <code>optional bool face_merge = 18;</code>
       */
      public boolean hasFaceMerge() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional bool face_merge = 18;</code>
       */
      public boolean getFaceMerge() {
        return faceMerge_;
      }
      /**
       * <code>optional bool face_merge = 18;</code>
       */
      public Builder setFaceMerge(boolean value) {
        bitField0_ |= 0x00020000;
        faceMerge_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool face_merge = 18;</code>
       */
      public Builder clearFaceMerge() {
        bitField0_ = (bitField0_ & ~0x00020000);
        faceMerge_ = false;
        onChanged();
        return this;
      }

      private boolean mergeAll_ ;
      /**
       * <code>optional bool merge_all = 19;</code>
       */
      public boolean hasMergeAll() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional bool merge_all = 19;</code>
       */
      public boolean getMergeAll() {
        return mergeAll_;
      }
      /**
       * <code>optional bool merge_all = 19;</code>
       */
      public Builder setMergeAll(boolean value) {
        bitField0_ |= 0x00040000;
        mergeAll_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool merge_all = 19;</code>
       */
      public Builder clearMergeAll() {
        bitField0_ = (bitField0_ & ~0x00040000);
        mergeAll_ = false;
        onChanged();
        return this;
      }

      private double mergeThreshold_ ;
      /**
       * <code>optional double merge_threshold = 20;</code>
       */
      public boolean hasMergeThreshold() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional double merge_threshold = 20;</code>
       */
      public double getMergeThreshold() {
        return mergeThreshold_;
      }
      /**
       * <code>optional double merge_threshold = 20;</code>
       */
      public Builder setMergeThreshold(double value) {
        bitField0_ |= 0x00080000;
        mergeThreshold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double merge_threshold = 20;</code>
       */
      public Builder clearMergeThreshold() {
        bitField0_ = (bitField0_ & ~0x00080000);
        mergeThreshold_ = 0D;
        onChanged();
        return this;
      }

      private int mergeTimeOut_ ;
      /**
       * <code>optional int32 merge_time_out = 21;</code>
       */
      public boolean hasMergeTimeOut() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 merge_time_out = 21;</code>
       */
      public int getMergeTimeOut() {
        return mergeTimeOut_;
      }
      /**
       * <code>optional int32 merge_time_out = 21;</code>
       */
      public Builder setMergeTimeOut(int value) {
        bitField0_ |= 0x00100000;
        mergeTimeOut_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 merge_time_out = 21;</code>
       */
      public Builder clearMergeTimeOut() {
        bitField0_ = (bitField0_ & ~0x00100000);
        mergeTimeOut_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object channelGuid_ = "";
      /**
       * <code>optional string channel_guid = 22;</code>
       */
      public boolean hasChannelGuid() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional string channel_guid = 22;</code>
       */
      public java.lang.String getChannelGuid() {
        java.lang.Object ref = channelGuid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            channelGuid_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string channel_guid = 22;</code>
       */
      public com.google.protobuf.ByteString
          getChannelGuidBytes() {
        java.lang.Object ref = channelGuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channelGuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string channel_guid = 22;</code>
       */
      public Builder setChannelGuid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00200000;
        channelGuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel_guid = 22;</code>
       */
      public Builder clearChannelGuid() {
        bitField0_ = (bitField0_ & ~0x00200000);
        channelGuid_ = getDefaultInstance().getChannelGuid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel_guid = 22;</code>
       */
      public Builder setChannelGuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00200000;
        channelGuid_ = value;
        onChanged();
        return this;
      }

      private double channelLongitude_ ;
      /**
       * <code>optional double channel_longitude = 23;</code>
       */
      public boolean hasChannelLongitude() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional double channel_longitude = 23;</code>
       */
      public double getChannelLongitude() {
        return channelLongitude_;
      }
      /**
       * <code>optional double channel_longitude = 23;</code>
       */
      public Builder setChannelLongitude(double value) {
        bitField0_ |= 0x00400000;
        channelLongitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double channel_longitude = 23;</code>
       */
      public Builder clearChannelLongitude() {
        bitField0_ = (bitField0_ & ~0x00400000);
        channelLongitude_ = 0D;
        onChanged();
        return this;
      }

      private double channelLatitude_ ;
      /**
       * <code>optional double channel_latitude = 24;</code>
       */
      public boolean hasChannelLatitude() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional double channel_latitude = 24;</code>
       */
      public double getChannelLatitude() {
        return channelLatitude_;
      }
      /**
       * <code>optional double channel_latitude = 24;</code>
       */
      public Builder setChannelLatitude(double value) {
        bitField0_ |= 0x00800000;
        channelLatitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double channel_latitude = 24;</code>
       */
      public Builder clearChannelLatitude() {
        bitField0_ = (bitField0_ & ~0x00800000);
        channelLatitude_ = 0D;
        onChanged();
        return this;
      }

      private int channelDirect_ ;
      /**
       * <code>optional int32 channel_direct = 25;</code>
       */
      public boolean hasChannelDirect() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int32 channel_direct = 25;</code>
       */
      public int getChannelDirect() {
        return channelDirect_;
      }
      /**
       * <code>optional int32 channel_direct = 25;</code>
       */
      public Builder setChannelDirect(int value) {
        bitField0_ |= 0x01000000;
        channelDirect_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 channel_direct = 25;</code>
       */
      public Builder clearChannelDirect() {
        bitField0_ = (bitField0_ & ~0x01000000);
        channelDirect_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object channelArea_ = "";
      /**
       * <code>optional string channel_area = 26;</code>
       */
      public boolean hasChannelArea() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional string channel_area = 26;</code>
       */
      public java.lang.String getChannelArea() {
        java.lang.Object ref = channelArea_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            channelArea_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string channel_area = 26;</code>
       */
      public com.google.protobuf.ByteString
          getChannelAreaBytes() {
        java.lang.Object ref = channelArea_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channelArea_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string channel_area = 26;</code>
       */
      public Builder setChannelArea(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x02000000;
        channelArea_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel_area = 26;</code>
       */
      public Builder clearChannelArea() {
        bitField0_ = (bitField0_ & ~0x02000000);
        channelArea_ = getDefaultInstance().getChannelArea();
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel_area = 26;</code>
       */
      public Builder setChannelAreaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x02000000;
        channelArea_ = value;
        onChanged();
        return this;
      }

      private int important_ ;
      /**
       * <code>optional int32 important = 27;</code>
       */
      public boolean hasImportant() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int32 important = 27;</code>
       */
      public int getImportant() {
        return important_;
      }
      /**
       * <code>optional int32 important = 27;</code>
       */
      public Builder setImportant(int value) {
        bitField0_ |= 0x04000000;
        important_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 important = 27;</code>
       */
      public Builder clearImportant() {
        bitField0_ = (bitField0_ & ~0x04000000);
        important_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object sdkVer_ = "";
      /**
       * <code>optional string sdk_ver = 28;</code>
       */
      public boolean hasSdkVer() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional string sdk_ver = 28;</code>
       */
      public java.lang.String getSdkVer() {
        java.lang.Object ref = sdkVer_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sdkVer_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string sdk_ver = 28;</code>
       */
      public com.google.protobuf.ByteString
          getSdkVerBytes() {
        java.lang.Object ref = sdkVer_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sdkVer_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string sdk_ver = 28;</code>
       */
      public Builder setSdkVer(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x08000000;
        sdkVer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string sdk_ver = 28;</code>
       */
      public Builder clearSdkVer() {
        bitField0_ = (bitField0_ & ~0x08000000);
        sdkVer_ = getDefaultInstance().getSdkVer();
        onChanged();
        return this;
      }
      /**
       * <code>optional string sdk_ver = 28;</code>
       */
      public Builder setSdkVerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x08000000;
        sdkVer_ = value;
        onChanged();
        return this;
      }

      private int maxYaw_ ;
      /**
       * <code>optional int32 max_yaw = 29;</code>
       */
      public boolean hasMaxYaw() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int32 max_yaw = 29;</code>
       */
      public int getMaxYaw() {
        return maxYaw_;
      }
      /**
       * <code>optional int32 max_yaw = 29;</code>
       */
      public Builder setMaxYaw(int value) {
        bitField0_ |= 0x10000000;
        maxYaw_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 max_yaw = 29;</code>
       */
      public Builder clearMaxYaw() {
        bitField0_ = (bitField0_ & ~0x10000000);
        maxYaw_ = 0;
        onChanged();
        return this;
      }

      private int maxPitch_ ;
      /**
       * <code>optional int32 max_pitch = 30;</code>
       */
      public boolean hasMaxPitch() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int32 max_pitch = 30;</code>
       */
      public int getMaxPitch() {
        return maxPitch_;
      }
      /**
       * <code>optional int32 max_pitch = 30;</code>
       */
      public Builder setMaxPitch(int value) {
        bitField0_ |= 0x20000000;
        maxPitch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 max_pitch = 30;</code>
       */
      public Builder clearMaxPitch() {
        bitField0_ = (bitField0_ & ~0x20000000);
        maxPitch_ = 0;
        onChanged();
        return this;
      }

      private int maxRoll_ ;
      /**
       * <code>optional int32 max_roll = 31;</code>
       */
      public boolean hasMaxRoll() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int32 max_roll = 31;</code>
       */
      public int getMaxRoll() {
        return maxRoll_;
      }
      /**
       * <code>optional int32 max_roll = 31;</code>
       */
      public Builder setMaxRoll(int value) {
        bitField0_ |= 0x40000000;
        maxRoll_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 max_roll = 31;</code>
       */
      public Builder clearMaxRoll() {
        bitField0_ = (bitField0_ & ~0x40000000);
        maxRoll_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pbChannelInfoEx)
    }

    // @@protoc_insertion_point(class_scope:pbChannelInfoEx)
    private static final MQMsg.pbChannelInfoEx DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MQMsg.pbChannelInfoEx();
    }

    public static MQMsg.pbChannelInfoEx getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<pbChannelInfoEx>
        PARSER = new com.google.protobuf.AbstractParser<pbChannelInfoEx>() {
      public pbChannelInfoEx parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new pbChannelInfoEx(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<pbChannelInfoEx> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<pbChannelInfoEx> getParserForType() {
      return PARSER;
    }

    public MQMsg.pbChannelInfoEx getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface pbCapFaceInfoExOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pbCapFaceInfoEx)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string person_id = 1;</code>
     */
    boolean hasPersonId();
    /**
     * <code>required string person_id = 1;</code>
     */
    java.lang.String getPersonId();
    /**
     * <code>required string person_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getPersonIdBytes();

    /**
     * <code>required string fcap_id = 2;</code>
     */
    boolean hasFcapId();
    /**
     * <code>required string fcap_id = 2;</code>
     */
    java.lang.String getFcapId();
    /**
     * <code>required string fcap_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getFcapIdBytes();

    /**
     * <code>optional string fcap_dcid = 3;</code>
     */
    boolean hasFcapDcid();
    /**
     * <code>optional string fcap_dcid = 3;</code>
     */
    java.lang.String getFcapDcid();
    /**
     * <code>optional string fcap_dcid = 3;</code>
     */
    com.google.protobuf.ByteString
        getFcapDcidBytes();

    /**
     * <code>optional int64 fcap_time = 4;</code>
     */
    boolean hasFcapTime();
    /**
     * <code>optional int64 fcap_time = 4;</code>
     */
    long getFcapTime();

    /**
     * <code>optional int32 fcap_quality = 5;</code>
     */
    boolean hasFcapQuality();
    /**
     * <code>optional int32 fcap_quality = 5;</code>
     */
    int getFcapQuality();

    /**
     * <code>optional bytes fcap_obj_img = 6;</code>
     */
    boolean hasFcapObjImg();
    /**
     * <code>optional bytes fcap_obj_img = 6;</code>
     */
    com.google.protobuf.ByteString getFcapObjImg();

    /**
     * <code>optional bytes fcap_obj_feat = 7;</code>
     */
    boolean hasFcapObjFeat();
    /**
     * <code>optional bytes fcap_obj_feat = 7;</code>
     */
    com.google.protobuf.ByteString getFcapObjFeat();

    /**
     * <code>optional bytes fcap_scene_img = 8;</code>
     */
    boolean hasFcapSceneImg();
    /**
     * <code>optional bytes fcap_scene_img = 8;</code>
     */
    com.google.protobuf.ByteString getFcapSceneImg();

    /**
     * <code>optional int32 fcap_face_x = 9;</code>
     */
    boolean hasFcapFaceX();
    /**
     * <code>optional int32 fcap_face_x = 9;</code>
     */
    int getFcapFaceX();

    /**
     * <code>optional int32 fcap_face_y = 10;</code>
     */
    boolean hasFcapFaceY();
    /**
     * <code>optional int32 fcap_face_y = 10;</code>
     */
    int getFcapFaceY();

    /**
     * <code>optional int32 fcap_face_cx = 11;</code>
     */
    boolean hasFcapFaceCx();
    /**
     * <code>optional int32 fcap_face_cx = 11;</code>
     */
    int getFcapFaceCx();

    /**
     * <code>optional int32 fcap_face_cy = 12;</code>
     */
    boolean hasFcapFaceCy();
    /**
     * <code>optional int32 fcap_face_cy = 12;</code>
     */
    int getFcapFaceCy();

    /**
     * <code>optional int32 fcap_sex = 13;</code>
     */
    boolean hasFcapSex();
    /**
     * <code>optional int32 fcap_sex = 13;</code>
     */
    int getFcapSex();

    /**
     * <code>optional int32 fcap_age = 14;</code>
     */
    boolean hasFcapAge();
    /**
     * <code>optional int32 fcap_age = 14;</code>
     */
    int getFcapAge();

    /**
     * <code>optional int32 fcap_yaw = 15;</code>
     */
    boolean hasFcapYaw();
    /**
     * <code>optional int32 fcap_yaw = 15;</code>
     */
    int getFcapYaw();

    /**
     * <code>optional int32 fcap_pitch = 16;</code>
     */
    boolean hasFcapPitch();
    /**
     * <code>optional int32 fcap_pitch = 16;</code>
     */
    int getFcapPitch();

    /**
     * <code>optional int32 fcap_roll = 17;</code>
     */
    boolean hasFcapRoll();
    /**
     * <code>optional int32 fcap_roll = 17;</code>
     */
    int getFcapRoll();

    /**
     * <code>optional int32 fcap_left_eye_x = 18;</code>
     */
    boolean hasFcapLeftEyeX();
    /**
     * <code>optional int32 fcap_left_eye_x = 18;</code>
     */
    int getFcapLeftEyeX();

    /**
     * <code>optional int32 fcap_left_eye_y = 19;</code>
     */
    boolean hasFcapLeftEyeY();
    /**
     * <code>optional int32 fcap_left_eye_y = 19;</code>
     */
    int getFcapLeftEyeY();

    /**
     * <code>optional int32 fcap_right_eye_x = 20;</code>
     */
    boolean hasFcapRightEyeX();
    /**
     * <code>optional int32 fcap_right_eye_x = 20;</code>
     */
    int getFcapRightEyeX();

    /**
     * <code>optional int32 fcap_right_eye_y = 21;</code>
     */
    boolean hasFcapRightEyeY();
    /**
     * <code>optional int32 fcap_right_eye_y = 21;</code>
     */
    int getFcapRightEyeY();

    /**
     * <code>optional int32 fcap_mouth_x = 22;</code>
     */
    boolean hasFcapMouthX();
    /**
     * <code>optional int32 fcap_mouth_x = 22;</code>
     */
    int getFcapMouthX();

    /**
     * <code>optional int32 fcap_mouth_y = 23;</code>
     */
    boolean hasFcapMouthY();
    /**
     * <code>optional int32 fcap_mouth_y = 23;</code>
     */
    int getFcapMouthY();

    /**
     * <code>optional int32 fcap_nose_x = 24;</code>
     */
    boolean hasFcapNoseX();
    /**
     * <code>optional int32 fcap_nose_x = 24;</code>
     */
    int getFcapNoseX();

    /**
     * <code>optional int32 fcap_nose_y = 25;</code>
     */
    boolean hasFcapNoseY();
    /**
     * <code>optional int32 fcap_nose_y = 25;</code>
     */
    int getFcapNoseY();

    /**
     * <code>optional double confidence = 26;</code>
     */
    boolean hasConfidence();
    /**
     * <code>optional double confidence = 26;</code>
     */
    double getConfidence();

    /**
     * <code>required .pbChannelInfoEx chInfo = 27;</code>
     */
    boolean hasChInfo();
    /**
     * <code>required .pbChannelInfoEx chInfo = 27;</code>
     */
    MQMsg.pbChannelInfoEx getChInfo();
    /**
     * <code>required .pbChannelInfoEx chInfo = 27;</code>
     */
    MQMsg.pbChannelInfoExOrBuilder getChInfoOrBuilder();
  }
  /**
   * Protobuf type {@code pbCapFaceInfoEx}
   */
  public  static final class pbCapFaceInfoEx extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pbCapFaceInfoEx)
      pbCapFaceInfoExOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use pbCapFaceInfoEx.newBuilder() to construct.
    private pbCapFaceInfoEx(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private pbCapFaceInfoEx() {
      personId_ = "";
      fcapId_ = "";
      fcapDcid_ = "";
      fcapTime_ = 0L;
      fcapQuality_ = 0;
      fcapObjImg_ = com.google.protobuf.ByteString.EMPTY;
      fcapObjFeat_ = com.google.protobuf.ByteString.EMPTY;
      fcapSceneImg_ = com.google.protobuf.ByteString.EMPTY;
      fcapFaceX_ = 0;
      fcapFaceY_ = 0;
      fcapFaceCx_ = 0;
      fcapFaceCy_ = 0;
      fcapSex_ = 0;
      fcapAge_ = 0;
      fcapYaw_ = 0;
      fcapPitch_ = 0;
      fcapRoll_ = 0;
      fcapLeftEyeX_ = 0;
      fcapLeftEyeY_ = 0;
      fcapRightEyeX_ = 0;
      fcapRightEyeY_ = 0;
      fcapMouthX_ = 0;
      fcapMouthY_ = 0;
      fcapNoseX_ = 0;
      fcapNoseY_ = 0;
      confidence_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private pbCapFaceInfoEx(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              personId_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              fcapId_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              fcapDcid_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              fcapTime_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              fcapQuality_ = input.readInt32();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              fcapObjImg_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              fcapObjFeat_ = input.readBytes();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              fcapSceneImg_ = input.readBytes();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              fcapFaceX_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              fcapFaceY_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              fcapFaceCx_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              fcapFaceCy_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              fcapSex_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              fcapAge_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              fcapYaw_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              fcapPitch_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              fcapRoll_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              fcapLeftEyeX_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              fcapLeftEyeY_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              fcapRightEyeX_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              fcapRightEyeY_ = input.readInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00200000;
              fcapMouthX_ = input.readInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00400000;
              fcapMouthY_ = input.readInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00800000;
              fcapNoseX_ = input.readInt32();
              break;
            }
            case 200: {
              bitField0_ |= 0x01000000;
              fcapNoseY_ = input.readInt32();
              break;
            }
            case 209: {
              bitField0_ |= 0x02000000;
              confidence_ = input.readDouble();
              break;
            }
            case 218: {
              MQMsg.pbChannelInfoEx.Builder subBuilder = null;
              if (((bitField0_ & 0x04000000) == 0x04000000)) {
                subBuilder = chInfo_.toBuilder();
              }
              chInfo_ = input.readMessage(MQMsg.pbChannelInfoEx.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(chInfo_);
                chInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x04000000;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MQMsg.internal_static_pbCapFaceInfoEx_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MQMsg.internal_static_pbCapFaceInfoEx_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MQMsg.pbCapFaceInfoEx.class, MQMsg.pbCapFaceInfoEx.Builder.class);
    }

    private int bitField0_;
    public static final int PERSON_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object personId_;
    /**
     * <code>required string person_id = 1;</code>
     */
    public boolean hasPersonId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string person_id = 1;</code>
     */
    public java.lang.String getPersonId() {
      java.lang.Object ref = personId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          personId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string person_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPersonIdBytes() {
      java.lang.Object ref = personId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        personId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FCAP_ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object fcapId_;
    /**
     * <code>required string fcap_id = 2;</code>
     */
    public boolean hasFcapId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string fcap_id = 2;</code>
     */
    public java.lang.String getFcapId() {
      java.lang.Object ref = fcapId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fcapId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string fcap_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFcapIdBytes() {
      java.lang.Object ref = fcapId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fcapId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FCAP_DCID_FIELD_NUMBER = 3;
    private volatile java.lang.Object fcapDcid_;
    /**
     * <code>optional string fcap_dcid = 3;</code>
     */
    public boolean hasFcapDcid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string fcap_dcid = 3;</code>
     */
    public java.lang.String getFcapDcid() {
      java.lang.Object ref = fcapDcid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fcapDcid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string fcap_dcid = 3;</code>
     */
    public com.google.protobuf.ByteString
        getFcapDcidBytes() {
      java.lang.Object ref = fcapDcid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fcapDcid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FCAP_TIME_FIELD_NUMBER = 4;
    private long fcapTime_;
    /**
     * <code>optional int64 fcap_time = 4;</code>
     */
    public boolean hasFcapTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 fcap_time = 4;</code>
     */
    public long getFcapTime() {
      return fcapTime_;
    }

    public static final int FCAP_QUALITY_FIELD_NUMBER = 5;
    private int fcapQuality_;
    /**
     * <code>optional int32 fcap_quality = 5;</code>
     */
    public boolean hasFcapQuality() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 fcap_quality = 5;</code>
     */
    public int getFcapQuality() {
      return fcapQuality_;
    }

    public static final int FCAP_OBJ_IMG_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString fcapObjImg_;
    /**
     * <code>optional bytes fcap_obj_img = 6;</code>
     */
    public boolean hasFcapObjImg() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bytes fcap_obj_img = 6;</code>
     */
    public com.google.protobuf.ByteString getFcapObjImg() {
      return fcapObjImg_;
    }

    public static final int FCAP_OBJ_FEAT_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString fcapObjFeat_;
    /**
     * <code>optional bytes fcap_obj_feat = 7;</code>
     */
    public boolean hasFcapObjFeat() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bytes fcap_obj_feat = 7;</code>
     */
    public com.google.protobuf.ByteString getFcapObjFeat() {
      return fcapObjFeat_;
    }

    public static final int FCAP_SCENE_IMG_FIELD_NUMBER = 8;
    private com.google.protobuf.ByteString fcapSceneImg_;
    /**
     * <code>optional bytes fcap_scene_img = 8;</code>
     */
    public boolean hasFcapSceneImg() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bytes fcap_scene_img = 8;</code>
     */
    public com.google.protobuf.ByteString getFcapSceneImg() {
      return fcapSceneImg_;
    }

    public static final int FCAP_FACE_X_FIELD_NUMBER = 9;
    private int fcapFaceX_;
    /**
     * <code>optional int32 fcap_face_x = 9;</code>
     */
    public boolean hasFcapFaceX() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 fcap_face_x = 9;</code>
     */
    public int getFcapFaceX() {
      return fcapFaceX_;
    }

    public static final int FCAP_FACE_Y_FIELD_NUMBER = 10;
    private int fcapFaceY_;
    /**
     * <code>optional int32 fcap_face_y = 10;</code>
     */
    public boolean hasFcapFaceY() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 fcap_face_y = 10;</code>
     */
    public int getFcapFaceY() {
      return fcapFaceY_;
    }

    public static final int FCAP_FACE_CX_FIELD_NUMBER = 11;
    private int fcapFaceCx_;
    /**
     * <code>optional int32 fcap_face_cx = 11;</code>
     */
    public boolean hasFcapFaceCx() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 fcap_face_cx = 11;</code>
     */
    public int getFcapFaceCx() {
      return fcapFaceCx_;
    }

    public static final int FCAP_FACE_CY_FIELD_NUMBER = 12;
    private int fcapFaceCy_;
    /**
     * <code>optional int32 fcap_face_cy = 12;</code>
     */
    public boolean hasFcapFaceCy() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 fcap_face_cy = 12;</code>
     */
    public int getFcapFaceCy() {
      return fcapFaceCy_;
    }

    public static final int FCAP_SEX_FIELD_NUMBER = 13;
    private int fcapSex_;
    /**
     * <code>optional int32 fcap_sex = 13;</code>
     */
    public boolean hasFcapSex() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 fcap_sex = 13;</code>
     */
    public int getFcapSex() {
      return fcapSex_;
    }

    public static final int FCAP_AGE_FIELD_NUMBER = 14;
    private int fcapAge_;
    /**
     * <code>optional int32 fcap_age = 14;</code>
     */
    public boolean hasFcapAge() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 fcap_age = 14;</code>
     */
    public int getFcapAge() {
      return fcapAge_;
    }

    public static final int FCAP_YAW_FIELD_NUMBER = 15;
    private int fcapYaw_;
    /**
     * <code>optional int32 fcap_yaw = 15;</code>
     */
    public boolean hasFcapYaw() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 fcap_yaw = 15;</code>
     */
    public int getFcapYaw() {
      return fcapYaw_;
    }

    public static final int FCAP_PITCH_FIELD_NUMBER = 16;
    private int fcapPitch_;
    /**
     * <code>optional int32 fcap_pitch = 16;</code>
     */
    public boolean hasFcapPitch() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 fcap_pitch = 16;</code>
     */
    public int getFcapPitch() {
      return fcapPitch_;
    }

    public static final int FCAP_ROLL_FIELD_NUMBER = 17;
    private int fcapRoll_;
    /**
     * <code>optional int32 fcap_roll = 17;</code>
     */
    public boolean hasFcapRoll() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 fcap_roll = 17;</code>
     */
    public int getFcapRoll() {
      return fcapRoll_;
    }

    public static final int FCAP_LEFT_EYE_X_FIELD_NUMBER = 18;
    private int fcapLeftEyeX_;
    /**
     * <code>optional int32 fcap_left_eye_x = 18;</code>
     */
    public boolean hasFcapLeftEyeX() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 fcap_left_eye_x = 18;</code>
     */
    public int getFcapLeftEyeX() {
      return fcapLeftEyeX_;
    }

    public static final int FCAP_LEFT_EYE_Y_FIELD_NUMBER = 19;
    private int fcapLeftEyeY_;
    /**
     * <code>optional int32 fcap_left_eye_y = 19;</code>
     */
    public boolean hasFcapLeftEyeY() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 fcap_left_eye_y = 19;</code>
     */
    public int getFcapLeftEyeY() {
      return fcapLeftEyeY_;
    }

    public static final int FCAP_RIGHT_EYE_X_FIELD_NUMBER = 20;
    private int fcapRightEyeX_;
    /**
     * <code>optional int32 fcap_right_eye_x = 20;</code>
     */
    public boolean hasFcapRightEyeX() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 fcap_right_eye_x = 20;</code>
     */
    public int getFcapRightEyeX() {
      return fcapRightEyeX_;
    }

    public static final int FCAP_RIGHT_EYE_Y_FIELD_NUMBER = 21;
    private int fcapRightEyeY_;
    /**
     * <code>optional int32 fcap_right_eye_y = 21;</code>
     */
    public boolean hasFcapRightEyeY() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 fcap_right_eye_y = 21;</code>
     */
    public int getFcapRightEyeY() {
      return fcapRightEyeY_;
    }

    public static final int FCAP_MOUTH_X_FIELD_NUMBER = 22;
    private int fcapMouthX_;
    /**
     * <code>optional int32 fcap_mouth_x = 22;</code>
     */
    public boolean hasFcapMouthX() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int32 fcap_mouth_x = 22;</code>
     */
    public int getFcapMouthX() {
      return fcapMouthX_;
    }

    public static final int FCAP_MOUTH_Y_FIELD_NUMBER = 23;
    private int fcapMouthY_;
    /**
     * <code>optional int32 fcap_mouth_y = 23;</code>
     */
    public boolean hasFcapMouthY() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int32 fcap_mouth_y = 23;</code>
     */
    public int getFcapMouthY() {
      return fcapMouthY_;
    }

    public static final int FCAP_NOSE_X_FIELD_NUMBER = 24;
    private int fcapNoseX_;
    /**
     * <code>optional int32 fcap_nose_x = 24;</code>
     */
    public boolean hasFcapNoseX() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int32 fcap_nose_x = 24;</code>
     */
    public int getFcapNoseX() {
      return fcapNoseX_;
    }

    public static final int FCAP_NOSE_Y_FIELD_NUMBER = 25;
    private int fcapNoseY_;
    /**
     * <code>optional int32 fcap_nose_y = 25;</code>
     */
    public boolean hasFcapNoseY() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int32 fcap_nose_y = 25;</code>
     */
    public int getFcapNoseY() {
      return fcapNoseY_;
    }

    public static final int CONFIDENCE_FIELD_NUMBER = 26;
    private double confidence_;
    /**
     * <code>optional double confidence = 26;</code>
     */
    public boolean hasConfidence() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional double confidence = 26;</code>
     */
    public double getConfidence() {
      return confidence_;
    }

    public static final int CHINFO_FIELD_NUMBER = 27;
    private MQMsg.pbChannelInfoEx chInfo_;
    /**
     * <code>required .pbChannelInfoEx chInfo = 27;</code>
     */
    public boolean hasChInfo() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>required .pbChannelInfoEx chInfo = 27;</code>
     */
    public MQMsg.pbChannelInfoEx getChInfo() {
      return chInfo_ == null ? MQMsg.pbChannelInfoEx.getDefaultInstance() : chInfo_;
    }
    /**
     * <code>required .pbChannelInfoEx chInfo = 27;</code>
     */
    public MQMsg.pbChannelInfoExOrBuilder getChInfoOrBuilder() {
      return chInfo_ == null ? MQMsg.pbChannelInfoEx.getDefaultInstance() : chInfo_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPersonId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFcapId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getChInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, personId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, fcapId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, fcapDcid_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, fcapTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, fcapQuality_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, fcapObjImg_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, fcapObjFeat_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, fcapSceneImg_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, fcapFaceX_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, fcapFaceY_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, fcapFaceCx_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, fcapFaceCy_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, fcapSex_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, fcapAge_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, fcapYaw_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, fcapPitch_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(17, fcapRoll_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, fcapLeftEyeX_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(19, fcapLeftEyeY_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(20, fcapRightEyeX_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(21, fcapRightEyeY_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(22, fcapMouthX_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(23, fcapMouthY_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(24, fcapNoseX_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(25, fcapNoseY_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeDouble(26, confidence_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeMessage(27, getChInfo());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, personId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, fcapId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, fcapDcid_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, fcapTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, fcapQuality_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, fcapObjImg_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, fcapObjFeat_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, fcapSceneImg_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, fcapFaceX_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, fcapFaceY_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, fcapFaceCx_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, fcapFaceCy_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, fcapSex_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, fcapAge_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, fcapYaw_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, fcapPitch_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, fcapRoll_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, fcapLeftEyeX_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, fcapLeftEyeY_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, fcapRightEyeX_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, fcapRightEyeY_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, fcapMouthX_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, fcapMouthY_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, fcapNoseX_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, fcapNoseY_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(26, confidence_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(27, getChInfo());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MQMsg.pbCapFaceInfoEx)) {
        return super.equals(obj);
      }
      MQMsg.pbCapFaceInfoEx other = (MQMsg.pbCapFaceInfoEx) obj;

      boolean result = true;
      result = result && (hasPersonId() == other.hasPersonId());
      if (hasPersonId()) {
        result = result && getPersonId()
            .equals(other.getPersonId());
      }
      result = result && (hasFcapId() == other.hasFcapId());
      if (hasFcapId()) {
        result = result && getFcapId()
            .equals(other.getFcapId());
      }
      result = result && (hasFcapDcid() == other.hasFcapDcid());
      if (hasFcapDcid()) {
        result = result && getFcapDcid()
            .equals(other.getFcapDcid());
      }
      result = result && (hasFcapTime() == other.hasFcapTime());
      if (hasFcapTime()) {
        result = result && (getFcapTime()
            == other.getFcapTime());
      }
      result = result && (hasFcapQuality() == other.hasFcapQuality());
      if (hasFcapQuality()) {
        result = result && (getFcapQuality()
            == other.getFcapQuality());
      }
      result = result && (hasFcapObjImg() == other.hasFcapObjImg());
      if (hasFcapObjImg()) {
        result = result && getFcapObjImg()
            .equals(other.getFcapObjImg());
      }
      result = result && (hasFcapObjFeat() == other.hasFcapObjFeat());
      if (hasFcapObjFeat()) {
        result = result && getFcapObjFeat()
            .equals(other.getFcapObjFeat());
      }
      result = result && (hasFcapSceneImg() == other.hasFcapSceneImg());
      if (hasFcapSceneImg()) {
        result = result && getFcapSceneImg()
            .equals(other.getFcapSceneImg());
      }
      result = result && (hasFcapFaceX() == other.hasFcapFaceX());
      if (hasFcapFaceX()) {
        result = result && (getFcapFaceX()
            == other.getFcapFaceX());
      }
      result = result && (hasFcapFaceY() == other.hasFcapFaceY());
      if (hasFcapFaceY()) {
        result = result && (getFcapFaceY()
            == other.getFcapFaceY());
      }
      result = result && (hasFcapFaceCx() == other.hasFcapFaceCx());
      if (hasFcapFaceCx()) {
        result = result && (getFcapFaceCx()
            == other.getFcapFaceCx());
      }
      result = result && (hasFcapFaceCy() == other.hasFcapFaceCy());
      if (hasFcapFaceCy()) {
        result = result && (getFcapFaceCy()
            == other.getFcapFaceCy());
      }
      result = result && (hasFcapSex() == other.hasFcapSex());
      if (hasFcapSex()) {
        result = result && (getFcapSex()
            == other.getFcapSex());
      }
      result = result && (hasFcapAge() == other.hasFcapAge());
      if (hasFcapAge()) {
        result = result && (getFcapAge()
            == other.getFcapAge());
      }
      result = result && (hasFcapYaw() == other.hasFcapYaw());
      if (hasFcapYaw()) {
        result = result && (getFcapYaw()
            == other.getFcapYaw());
      }
      result = result && (hasFcapPitch() == other.hasFcapPitch());
      if (hasFcapPitch()) {
        result = result && (getFcapPitch()
            == other.getFcapPitch());
      }
      result = result && (hasFcapRoll() == other.hasFcapRoll());
      if (hasFcapRoll()) {
        result = result && (getFcapRoll()
            == other.getFcapRoll());
      }
      result = result && (hasFcapLeftEyeX() == other.hasFcapLeftEyeX());
      if (hasFcapLeftEyeX()) {
        result = result && (getFcapLeftEyeX()
            == other.getFcapLeftEyeX());
      }
      result = result && (hasFcapLeftEyeY() == other.hasFcapLeftEyeY());
      if (hasFcapLeftEyeY()) {
        result = result && (getFcapLeftEyeY()
            == other.getFcapLeftEyeY());
      }
      result = result && (hasFcapRightEyeX() == other.hasFcapRightEyeX());
      if (hasFcapRightEyeX()) {
        result = result && (getFcapRightEyeX()
            == other.getFcapRightEyeX());
      }
      result = result && (hasFcapRightEyeY() == other.hasFcapRightEyeY());
      if (hasFcapRightEyeY()) {
        result = result && (getFcapRightEyeY()
            == other.getFcapRightEyeY());
      }
      result = result && (hasFcapMouthX() == other.hasFcapMouthX());
      if (hasFcapMouthX()) {
        result = result && (getFcapMouthX()
            == other.getFcapMouthX());
      }
      result = result && (hasFcapMouthY() == other.hasFcapMouthY());
      if (hasFcapMouthY()) {
        result = result && (getFcapMouthY()
            == other.getFcapMouthY());
      }
      result = result && (hasFcapNoseX() == other.hasFcapNoseX());
      if (hasFcapNoseX()) {
        result = result && (getFcapNoseX()
            == other.getFcapNoseX());
      }
      result = result && (hasFcapNoseY() == other.hasFcapNoseY());
      if (hasFcapNoseY()) {
        result = result && (getFcapNoseY()
            == other.getFcapNoseY());
      }
      result = result && (hasConfidence() == other.hasConfidence());
      if (hasConfidence()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getConfidence())
            == java.lang.Double.doubleToLongBits(
                other.getConfidence()));
      }
      result = result && (hasChInfo() == other.hasChInfo());
      if (hasChInfo()) {
        result = result && getChInfo()
            .equals(other.getChInfo());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPersonId()) {
        hash = (37 * hash) + PERSON_ID_FIELD_NUMBER;
        hash = (53 * hash) + getPersonId().hashCode();
      }
      if (hasFcapId()) {
        hash = (37 * hash) + FCAP_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFcapId().hashCode();
      }
      if (hasFcapDcid()) {
        hash = (37 * hash) + FCAP_DCID_FIELD_NUMBER;
        hash = (53 * hash) + getFcapDcid().hashCode();
      }
      if (hasFcapTime()) {
        hash = (37 * hash) + FCAP_TIME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getFcapTime());
      }
      if (hasFcapQuality()) {
        hash = (37 * hash) + FCAP_QUALITY_FIELD_NUMBER;
        hash = (53 * hash) + getFcapQuality();
      }
      if (hasFcapObjImg()) {
        hash = (37 * hash) + FCAP_OBJ_IMG_FIELD_NUMBER;
        hash = (53 * hash) + getFcapObjImg().hashCode();
      }
      if (hasFcapObjFeat()) {
        hash = (37 * hash) + FCAP_OBJ_FEAT_FIELD_NUMBER;
        hash = (53 * hash) + getFcapObjFeat().hashCode();
      }
      if (hasFcapSceneImg()) {
        hash = (37 * hash) + FCAP_SCENE_IMG_FIELD_NUMBER;
        hash = (53 * hash) + getFcapSceneImg().hashCode();
      }
      if (hasFcapFaceX()) {
        hash = (37 * hash) + FCAP_FACE_X_FIELD_NUMBER;
        hash = (53 * hash) + getFcapFaceX();
      }
      if (hasFcapFaceY()) {
        hash = (37 * hash) + FCAP_FACE_Y_FIELD_NUMBER;
        hash = (53 * hash) + getFcapFaceY();
      }
      if (hasFcapFaceCx()) {
        hash = (37 * hash) + FCAP_FACE_CX_FIELD_NUMBER;
        hash = (53 * hash) + getFcapFaceCx();
      }
      if (hasFcapFaceCy()) {
        hash = (37 * hash) + FCAP_FACE_CY_FIELD_NUMBER;
        hash = (53 * hash) + getFcapFaceCy();
      }
      if (hasFcapSex()) {
        hash = (37 * hash) + FCAP_SEX_FIELD_NUMBER;
        hash = (53 * hash) + getFcapSex();
      }
      if (hasFcapAge()) {
        hash = (37 * hash) + FCAP_AGE_FIELD_NUMBER;
        hash = (53 * hash) + getFcapAge();
      }
      if (hasFcapYaw()) {
        hash = (37 * hash) + FCAP_YAW_FIELD_NUMBER;
        hash = (53 * hash) + getFcapYaw();
      }
      if (hasFcapPitch()) {
        hash = (37 * hash) + FCAP_PITCH_FIELD_NUMBER;
        hash = (53 * hash) + getFcapPitch();
      }
      if (hasFcapRoll()) {
        hash = (37 * hash) + FCAP_ROLL_FIELD_NUMBER;
        hash = (53 * hash) + getFcapRoll();
      }
      if (hasFcapLeftEyeX()) {
        hash = (37 * hash) + FCAP_LEFT_EYE_X_FIELD_NUMBER;
        hash = (53 * hash) + getFcapLeftEyeX();
      }
      if (hasFcapLeftEyeY()) {
        hash = (37 * hash) + FCAP_LEFT_EYE_Y_FIELD_NUMBER;
        hash = (53 * hash) + getFcapLeftEyeY();
      }
      if (hasFcapRightEyeX()) {
        hash = (37 * hash) + FCAP_RIGHT_EYE_X_FIELD_NUMBER;
        hash = (53 * hash) + getFcapRightEyeX();
      }
      if (hasFcapRightEyeY()) {
        hash = (37 * hash) + FCAP_RIGHT_EYE_Y_FIELD_NUMBER;
        hash = (53 * hash) + getFcapRightEyeY();
      }
      if (hasFcapMouthX()) {
        hash = (37 * hash) + FCAP_MOUTH_X_FIELD_NUMBER;
        hash = (53 * hash) + getFcapMouthX();
      }
      if (hasFcapMouthY()) {
        hash = (37 * hash) + FCAP_MOUTH_Y_FIELD_NUMBER;
        hash = (53 * hash) + getFcapMouthY();
      }
      if (hasFcapNoseX()) {
        hash = (37 * hash) + FCAP_NOSE_X_FIELD_NUMBER;
        hash = (53 * hash) + getFcapNoseX();
      }
      if (hasFcapNoseY()) {
        hash = (37 * hash) + FCAP_NOSE_Y_FIELD_NUMBER;
        hash = (53 * hash) + getFcapNoseY();
      }
      if (hasConfidence()) {
        hash = (37 * hash) + CONFIDENCE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getConfidence()));
      }
      if (hasChInfo()) {
        hash = (37 * hash) + CHINFO_FIELD_NUMBER;
        hash = (53 * hash) + getChInfo().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MQMsg.pbCapFaceInfoEx parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MQMsg.pbCapFaceInfoEx parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MQMsg.pbCapFaceInfoEx parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MQMsg.pbCapFaceInfoEx parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MQMsg.pbCapFaceInfoEx parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MQMsg.pbCapFaceInfoEx parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MQMsg.pbCapFaceInfoEx parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MQMsg.pbCapFaceInfoEx parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MQMsg.pbCapFaceInfoEx parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MQMsg.pbCapFaceInfoEx parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MQMsg.pbCapFaceInfoEx parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MQMsg.pbCapFaceInfoEx parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MQMsg.pbCapFaceInfoEx prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pbCapFaceInfoEx}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pbCapFaceInfoEx)
        MQMsg.pbCapFaceInfoExOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MQMsg.internal_static_pbCapFaceInfoEx_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MQMsg.internal_static_pbCapFaceInfoEx_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MQMsg.pbCapFaceInfoEx.class, MQMsg.pbCapFaceInfoEx.Builder.class);
      }

      // Construct using MQMsg.pbCapFaceInfoEx.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getChInfoFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        personId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        fcapId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        fcapDcid_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        fcapTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        fcapQuality_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        fcapObjImg_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        fcapObjFeat_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        fcapSceneImg_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000080);
        fcapFaceX_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        fcapFaceY_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        fcapFaceCx_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        fcapFaceCy_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        fcapSex_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        fcapAge_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        fcapYaw_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        fcapPitch_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        fcapRoll_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        fcapLeftEyeX_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        fcapLeftEyeY_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        fcapRightEyeX_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        fcapRightEyeY_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        fcapMouthX_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        fcapMouthY_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        fcapNoseX_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        fcapNoseY_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        confidence_ = 0D;
        bitField0_ = (bitField0_ & ~0x02000000);
        if (chInfoBuilder_ == null) {
          chInfo_ = null;
        } else {
          chInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x04000000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MQMsg.internal_static_pbCapFaceInfoEx_descriptor;
      }

      public MQMsg.pbCapFaceInfoEx getDefaultInstanceForType() {
        return MQMsg.pbCapFaceInfoEx.getDefaultInstance();
      }

      public MQMsg.pbCapFaceInfoEx build() {
        MQMsg.pbCapFaceInfoEx result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MQMsg.pbCapFaceInfoEx buildPartial() {
        MQMsg.pbCapFaceInfoEx result = new MQMsg.pbCapFaceInfoEx(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.personId_ = personId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fcapId_ = fcapId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fcapDcid_ = fcapDcid_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.fcapTime_ = fcapTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.fcapQuality_ = fcapQuality_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.fcapObjImg_ = fcapObjImg_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.fcapObjFeat_ = fcapObjFeat_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.fcapSceneImg_ = fcapSceneImg_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.fcapFaceX_ = fcapFaceX_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.fcapFaceY_ = fcapFaceY_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.fcapFaceCx_ = fcapFaceCx_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.fcapFaceCy_ = fcapFaceCy_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.fcapSex_ = fcapSex_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.fcapAge_ = fcapAge_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.fcapYaw_ = fcapYaw_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.fcapPitch_ = fcapPitch_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.fcapRoll_ = fcapRoll_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.fcapLeftEyeX_ = fcapLeftEyeX_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.fcapLeftEyeY_ = fcapLeftEyeY_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.fcapRightEyeX_ = fcapRightEyeX_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.fcapRightEyeY_ = fcapRightEyeY_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.fcapMouthX_ = fcapMouthX_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.fcapMouthY_ = fcapMouthY_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.fcapNoseX_ = fcapNoseX_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.fcapNoseY_ = fcapNoseY_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.confidence_ = confidence_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        if (chInfoBuilder_ == null) {
          result.chInfo_ = chInfo_;
        } else {
          result.chInfo_ = chInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MQMsg.pbCapFaceInfoEx) {
          return mergeFrom((MQMsg.pbCapFaceInfoEx)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MQMsg.pbCapFaceInfoEx other) {
        if (other == MQMsg.pbCapFaceInfoEx.getDefaultInstance()) return this;
        if (other.hasPersonId()) {
          bitField0_ |= 0x00000001;
          personId_ = other.personId_;
          onChanged();
        }
        if (other.hasFcapId()) {
          bitField0_ |= 0x00000002;
          fcapId_ = other.fcapId_;
          onChanged();
        }
        if (other.hasFcapDcid()) {
          bitField0_ |= 0x00000004;
          fcapDcid_ = other.fcapDcid_;
          onChanged();
        }
        if (other.hasFcapTime()) {
          setFcapTime(other.getFcapTime());
        }
        if (other.hasFcapQuality()) {
          setFcapQuality(other.getFcapQuality());
        }
        if (other.hasFcapObjImg()) {
          setFcapObjImg(other.getFcapObjImg());
        }
        if (other.hasFcapObjFeat()) {
          setFcapObjFeat(other.getFcapObjFeat());
        }
        if (other.hasFcapSceneImg()) {
          setFcapSceneImg(other.getFcapSceneImg());
        }
        if (other.hasFcapFaceX()) {
          setFcapFaceX(other.getFcapFaceX());
        }
        if (other.hasFcapFaceY()) {
          setFcapFaceY(other.getFcapFaceY());
        }
        if (other.hasFcapFaceCx()) {
          setFcapFaceCx(other.getFcapFaceCx());
        }
        if (other.hasFcapFaceCy()) {
          setFcapFaceCy(other.getFcapFaceCy());
        }
        if (other.hasFcapSex()) {
          setFcapSex(other.getFcapSex());
        }
        if (other.hasFcapAge()) {
          setFcapAge(other.getFcapAge());
        }
        if (other.hasFcapYaw()) {
          setFcapYaw(other.getFcapYaw());
        }
        if (other.hasFcapPitch()) {
          setFcapPitch(other.getFcapPitch());
        }
        if (other.hasFcapRoll()) {
          setFcapRoll(other.getFcapRoll());
        }
        if (other.hasFcapLeftEyeX()) {
          setFcapLeftEyeX(other.getFcapLeftEyeX());
        }
        if (other.hasFcapLeftEyeY()) {
          setFcapLeftEyeY(other.getFcapLeftEyeY());
        }
        if (other.hasFcapRightEyeX()) {
          setFcapRightEyeX(other.getFcapRightEyeX());
        }
        if (other.hasFcapRightEyeY()) {
          setFcapRightEyeY(other.getFcapRightEyeY());
        }
        if (other.hasFcapMouthX()) {
          setFcapMouthX(other.getFcapMouthX());
        }
        if (other.hasFcapMouthY()) {
          setFcapMouthY(other.getFcapMouthY());
        }
        if (other.hasFcapNoseX()) {
          setFcapNoseX(other.getFcapNoseX());
        }
        if (other.hasFcapNoseY()) {
          setFcapNoseY(other.getFcapNoseY());
        }
        if (other.hasConfidence()) {
          setConfidence(other.getConfidence());
        }
        if (other.hasChInfo()) {
          mergeChInfo(other.getChInfo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPersonId()) {
          return false;
        }
        if (!hasFcapId()) {
          return false;
        }
        if (!hasChInfo()) {
          return false;
        }
        if (!getChInfo().isInitialized()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MQMsg.pbCapFaceInfoEx parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MQMsg.pbCapFaceInfoEx) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object personId_ = "";
      /**
       * <code>required string person_id = 1;</code>
       */
      public boolean hasPersonId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string person_id = 1;</code>
       */
      public java.lang.String getPersonId() {
        java.lang.Object ref = personId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            personId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string person_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPersonIdBytes() {
        java.lang.Object ref = personId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          personId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string person_id = 1;</code>
       */
      public Builder setPersonId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        personId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string person_id = 1;</code>
       */
      public Builder clearPersonId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        personId_ = getDefaultInstance().getPersonId();
        onChanged();
        return this;
      }
      /**
       * <code>required string person_id = 1;</code>
       */
      public Builder setPersonIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        personId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object fcapId_ = "";
      /**
       * <code>required string fcap_id = 2;</code>
       */
      public boolean hasFcapId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string fcap_id = 2;</code>
       */
      public java.lang.String getFcapId() {
        java.lang.Object ref = fcapId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fcapId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string fcap_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getFcapIdBytes() {
        java.lang.Object ref = fcapId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fcapId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string fcap_id = 2;</code>
       */
      public Builder setFcapId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        fcapId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string fcap_id = 2;</code>
       */
      public Builder clearFcapId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fcapId_ = getDefaultInstance().getFcapId();
        onChanged();
        return this;
      }
      /**
       * <code>required string fcap_id = 2;</code>
       */
      public Builder setFcapIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        fcapId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object fcapDcid_ = "";
      /**
       * <code>optional string fcap_dcid = 3;</code>
       */
      public boolean hasFcapDcid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string fcap_dcid = 3;</code>
       */
      public java.lang.String getFcapDcid() {
        java.lang.Object ref = fcapDcid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fcapDcid_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string fcap_dcid = 3;</code>
       */
      public com.google.protobuf.ByteString
          getFcapDcidBytes() {
        java.lang.Object ref = fcapDcid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fcapDcid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string fcap_dcid = 3;</code>
       */
      public Builder setFcapDcid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        fcapDcid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string fcap_dcid = 3;</code>
       */
      public Builder clearFcapDcid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fcapDcid_ = getDefaultInstance().getFcapDcid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string fcap_dcid = 3;</code>
       */
      public Builder setFcapDcidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        fcapDcid_ = value;
        onChanged();
        return this;
      }

      private long fcapTime_ ;
      /**
       * <code>optional int64 fcap_time = 4;</code>
       */
      public boolean hasFcapTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 fcap_time = 4;</code>
       */
      public long getFcapTime() {
        return fcapTime_;
      }
      /**
       * <code>optional int64 fcap_time = 4;</code>
       */
      public Builder setFcapTime(long value) {
        bitField0_ |= 0x00000008;
        fcapTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 fcap_time = 4;</code>
       */
      public Builder clearFcapTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        fcapTime_ = 0L;
        onChanged();
        return this;
      }

      private int fcapQuality_ ;
      /**
       * <code>optional int32 fcap_quality = 5;</code>
       */
      public boolean hasFcapQuality() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 fcap_quality = 5;</code>
       */
      public int getFcapQuality() {
        return fcapQuality_;
      }
      /**
       * <code>optional int32 fcap_quality = 5;</code>
       */
      public Builder setFcapQuality(int value) {
        bitField0_ |= 0x00000010;
        fcapQuality_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fcap_quality = 5;</code>
       */
      public Builder clearFcapQuality() {
        bitField0_ = (bitField0_ & ~0x00000010);
        fcapQuality_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString fcapObjImg_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes fcap_obj_img = 6;</code>
       */
      public boolean hasFcapObjImg() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bytes fcap_obj_img = 6;</code>
       */
      public com.google.protobuf.ByteString getFcapObjImg() {
        return fcapObjImg_;
      }
      /**
       * <code>optional bytes fcap_obj_img = 6;</code>
       */
      public Builder setFcapObjImg(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        fcapObjImg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes fcap_obj_img = 6;</code>
       */
      public Builder clearFcapObjImg() {
        bitField0_ = (bitField0_ & ~0x00000020);
        fcapObjImg_ = getDefaultInstance().getFcapObjImg();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString fcapObjFeat_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes fcap_obj_feat = 7;</code>
       */
      public boolean hasFcapObjFeat() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bytes fcap_obj_feat = 7;</code>
       */
      public com.google.protobuf.ByteString getFcapObjFeat() {
        return fcapObjFeat_;
      }
      /**
       * <code>optional bytes fcap_obj_feat = 7;</code>
       */
      public Builder setFcapObjFeat(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        fcapObjFeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes fcap_obj_feat = 7;</code>
       */
      public Builder clearFcapObjFeat() {
        bitField0_ = (bitField0_ & ~0x00000040);
        fcapObjFeat_ = getDefaultInstance().getFcapObjFeat();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString fcapSceneImg_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes fcap_scene_img = 8;</code>
       */
      public boolean hasFcapSceneImg() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bytes fcap_scene_img = 8;</code>
       */
      public com.google.protobuf.ByteString getFcapSceneImg() {
        return fcapSceneImg_;
      }
      /**
       * <code>optional bytes fcap_scene_img = 8;</code>
       */
      public Builder setFcapSceneImg(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        fcapSceneImg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes fcap_scene_img = 8;</code>
       */
      public Builder clearFcapSceneImg() {
        bitField0_ = (bitField0_ & ~0x00000080);
        fcapSceneImg_ = getDefaultInstance().getFcapSceneImg();
        onChanged();
        return this;
      }

      private int fcapFaceX_ ;
      /**
       * <code>optional int32 fcap_face_x = 9;</code>
       */
      public boolean hasFcapFaceX() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 fcap_face_x = 9;</code>
       */
      public int getFcapFaceX() {
        return fcapFaceX_;
      }
      /**
       * <code>optional int32 fcap_face_x = 9;</code>
       */
      public Builder setFcapFaceX(int value) {
        bitField0_ |= 0x00000100;
        fcapFaceX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fcap_face_x = 9;</code>
       */
      public Builder clearFcapFaceX() {
        bitField0_ = (bitField0_ & ~0x00000100);
        fcapFaceX_ = 0;
        onChanged();
        return this;
      }

      private int fcapFaceY_ ;
      /**
       * <code>optional int32 fcap_face_y = 10;</code>
       */
      public boolean hasFcapFaceY() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 fcap_face_y = 10;</code>
       */
      public int getFcapFaceY() {
        return fcapFaceY_;
      }
      /**
       * <code>optional int32 fcap_face_y = 10;</code>
       */
      public Builder setFcapFaceY(int value) {
        bitField0_ |= 0x00000200;
        fcapFaceY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fcap_face_y = 10;</code>
       */
      public Builder clearFcapFaceY() {
        bitField0_ = (bitField0_ & ~0x00000200);
        fcapFaceY_ = 0;
        onChanged();
        return this;
      }

      private int fcapFaceCx_ ;
      /**
       * <code>optional int32 fcap_face_cx = 11;</code>
       */
      public boolean hasFcapFaceCx() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 fcap_face_cx = 11;</code>
       */
      public int getFcapFaceCx() {
        return fcapFaceCx_;
      }
      /**
       * <code>optional int32 fcap_face_cx = 11;</code>
       */
      public Builder setFcapFaceCx(int value) {
        bitField0_ |= 0x00000400;
        fcapFaceCx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fcap_face_cx = 11;</code>
       */
      public Builder clearFcapFaceCx() {
        bitField0_ = (bitField0_ & ~0x00000400);
        fcapFaceCx_ = 0;
        onChanged();
        return this;
      }

      private int fcapFaceCy_ ;
      /**
       * <code>optional int32 fcap_face_cy = 12;</code>
       */
      public boolean hasFcapFaceCy() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 fcap_face_cy = 12;</code>
       */
      public int getFcapFaceCy() {
        return fcapFaceCy_;
      }
      /**
       * <code>optional int32 fcap_face_cy = 12;</code>
       */
      public Builder setFcapFaceCy(int value) {
        bitField0_ |= 0x00000800;
        fcapFaceCy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fcap_face_cy = 12;</code>
       */
      public Builder clearFcapFaceCy() {
        bitField0_ = (bitField0_ & ~0x00000800);
        fcapFaceCy_ = 0;
        onChanged();
        return this;
      }

      private int fcapSex_ ;
      /**
       * <code>optional int32 fcap_sex = 13;</code>
       */
      public boolean hasFcapSex() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 fcap_sex = 13;</code>
       */
      public int getFcapSex() {
        return fcapSex_;
      }
      /**
       * <code>optional int32 fcap_sex = 13;</code>
       */
      public Builder setFcapSex(int value) {
        bitField0_ |= 0x00001000;
        fcapSex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fcap_sex = 13;</code>
       */
      public Builder clearFcapSex() {
        bitField0_ = (bitField0_ & ~0x00001000);
        fcapSex_ = 0;
        onChanged();
        return this;
      }

      private int fcapAge_ ;
      /**
       * <code>optional int32 fcap_age = 14;</code>
       */
      public boolean hasFcapAge() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 fcap_age = 14;</code>
       */
      public int getFcapAge() {
        return fcapAge_;
      }
      /**
       * <code>optional int32 fcap_age = 14;</code>
       */
      public Builder setFcapAge(int value) {
        bitField0_ |= 0x00002000;
        fcapAge_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fcap_age = 14;</code>
       */
      public Builder clearFcapAge() {
        bitField0_ = (bitField0_ & ~0x00002000);
        fcapAge_ = 0;
        onChanged();
        return this;
      }

      private int fcapYaw_ ;
      /**
       * <code>optional int32 fcap_yaw = 15;</code>
       */
      public boolean hasFcapYaw() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 fcap_yaw = 15;</code>
       */
      public int getFcapYaw() {
        return fcapYaw_;
      }
      /**
       * <code>optional int32 fcap_yaw = 15;</code>
       */
      public Builder setFcapYaw(int value) {
        bitField0_ |= 0x00004000;
        fcapYaw_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fcap_yaw = 15;</code>
       */
      public Builder clearFcapYaw() {
        bitField0_ = (bitField0_ & ~0x00004000);
        fcapYaw_ = 0;
        onChanged();
        return this;
      }

      private int fcapPitch_ ;
      /**
       * <code>optional int32 fcap_pitch = 16;</code>
       */
      public boolean hasFcapPitch() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 fcap_pitch = 16;</code>
       */
      public int getFcapPitch() {
        return fcapPitch_;
      }
      /**
       * <code>optional int32 fcap_pitch = 16;</code>
       */
      public Builder setFcapPitch(int value) {
        bitField0_ |= 0x00008000;
        fcapPitch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fcap_pitch = 16;</code>
       */
      public Builder clearFcapPitch() {
        bitField0_ = (bitField0_ & ~0x00008000);
        fcapPitch_ = 0;
        onChanged();
        return this;
      }

      private int fcapRoll_ ;
      /**
       * <code>optional int32 fcap_roll = 17;</code>
       */
      public boolean hasFcapRoll() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 fcap_roll = 17;</code>
       */
      public int getFcapRoll() {
        return fcapRoll_;
      }
      /**
       * <code>optional int32 fcap_roll = 17;</code>
       */
      public Builder setFcapRoll(int value) {
        bitField0_ |= 0x00010000;
        fcapRoll_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fcap_roll = 17;</code>
       */
      public Builder clearFcapRoll() {
        bitField0_ = (bitField0_ & ~0x00010000);
        fcapRoll_ = 0;
        onChanged();
        return this;
      }

      private int fcapLeftEyeX_ ;
      /**
       * <code>optional int32 fcap_left_eye_x = 18;</code>
       */
      public boolean hasFcapLeftEyeX() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 fcap_left_eye_x = 18;</code>
       */
      public int getFcapLeftEyeX() {
        return fcapLeftEyeX_;
      }
      /**
       * <code>optional int32 fcap_left_eye_x = 18;</code>
       */
      public Builder setFcapLeftEyeX(int value) {
        bitField0_ |= 0x00020000;
        fcapLeftEyeX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fcap_left_eye_x = 18;</code>
       */
      public Builder clearFcapLeftEyeX() {
        bitField0_ = (bitField0_ & ~0x00020000);
        fcapLeftEyeX_ = 0;
        onChanged();
        return this;
      }

      private int fcapLeftEyeY_ ;
      /**
       * <code>optional int32 fcap_left_eye_y = 19;</code>
       */
      public boolean hasFcapLeftEyeY() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 fcap_left_eye_y = 19;</code>
       */
      public int getFcapLeftEyeY() {
        return fcapLeftEyeY_;
      }
      /**
       * <code>optional int32 fcap_left_eye_y = 19;</code>
       */
      public Builder setFcapLeftEyeY(int value) {
        bitField0_ |= 0x00040000;
        fcapLeftEyeY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fcap_left_eye_y = 19;</code>
       */
      public Builder clearFcapLeftEyeY() {
        bitField0_ = (bitField0_ & ~0x00040000);
        fcapLeftEyeY_ = 0;
        onChanged();
        return this;
      }

      private int fcapRightEyeX_ ;
      /**
       * <code>optional int32 fcap_right_eye_x = 20;</code>
       */
      public boolean hasFcapRightEyeX() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 fcap_right_eye_x = 20;</code>
       */
      public int getFcapRightEyeX() {
        return fcapRightEyeX_;
      }
      /**
       * <code>optional int32 fcap_right_eye_x = 20;</code>
       */
      public Builder setFcapRightEyeX(int value) {
        bitField0_ |= 0x00080000;
        fcapRightEyeX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fcap_right_eye_x = 20;</code>
       */
      public Builder clearFcapRightEyeX() {
        bitField0_ = (bitField0_ & ~0x00080000);
        fcapRightEyeX_ = 0;
        onChanged();
        return this;
      }

      private int fcapRightEyeY_ ;
      /**
       * <code>optional int32 fcap_right_eye_y = 21;</code>
       */
      public boolean hasFcapRightEyeY() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 fcap_right_eye_y = 21;</code>
       */
      public int getFcapRightEyeY() {
        return fcapRightEyeY_;
      }
      /**
       * <code>optional int32 fcap_right_eye_y = 21;</code>
       */
      public Builder setFcapRightEyeY(int value) {
        bitField0_ |= 0x00100000;
        fcapRightEyeY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fcap_right_eye_y = 21;</code>
       */
      public Builder clearFcapRightEyeY() {
        bitField0_ = (bitField0_ & ~0x00100000);
        fcapRightEyeY_ = 0;
        onChanged();
        return this;
      }

      private int fcapMouthX_ ;
      /**
       * <code>optional int32 fcap_mouth_x = 22;</code>
       */
      public boolean hasFcapMouthX() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 fcap_mouth_x = 22;</code>
       */
      public int getFcapMouthX() {
        return fcapMouthX_;
      }
      /**
       * <code>optional int32 fcap_mouth_x = 22;</code>
       */
      public Builder setFcapMouthX(int value) {
        bitField0_ |= 0x00200000;
        fcapMouthX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fcap_mouth_x = 22;</code>
       */
      public Builder clearFcapMouthX() {
        bitField0_ = (bitField0_ & ~0x00200000);
        fcapMouthX_ = 0;
        onChanged();
        return this;
      }

      private int fcapMouthY_ ;
      /**
       * <code>optional int32 fcap_mouth_y = 23;</code>
       */
      public boolean hasFcapMouthY() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int32 fcap_mouth_y = 23;</code>
       */
      public int getFcapMouthY() {
        return fcapMouthY_;
      }
      /**
       * <code>optional int32 fcap_mouth_y = 23;</code>
       */
      public Builder setFcapMouthY(int value) {
        bitField0_ |= 0x00400000;
        fcapMouthY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fcap_mouth_y = 23;</code>
       */
      public Builder clearFcapMouthY() {
        bitField0_ = (bitField0_ & ~0x00400000);
        fcapMouthY_ = 0;
        onChanged();
        return this;
      }

      private int fcapNoseX_ ;
      /**
       * <code>optional int32 fcap_nose_x = 24;</code>
       */
      public boolean hasFcapNoseX() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int32 fcap_nose_x = 24;</code>
       */
      public int getFcapNoseX() {
        return fcapNoseX_;
      }
      /**
       * <code>optional int32 fcap_nose_x = 24;</code>
       */
      public Builder setFcapNoseX(int value) {
        bitField0_ |= 0x00800000;
        fcapNoseX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fcap_nose_x = 24;</code>
       */
      public Builder clearFcapNoseX() {
        bitField0_ = (bitField0_ & ~0x00800000);
        fcapNoseX_ = 0;
        onChanged();
        return this;
      }

      private int fcapNoseY_ ;
      /**
       * <code>optional int32 fcap_nose_y = 25;</code>
       */
      public boolean hasFcapNoseY() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int32 fcap_nose_y = 25;</code>
       */
      public int getFcapNoseY() {
        return fcapNoseY_;
      }
      /**
       * <code>optional int32 fcap_nose_y = 25;</code>
       */
      public Builder setFcapNoseY(int value) {
        bitField0_ |= 0x01000000;
        fcapNoseY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fcap_nose_y = 25;</code>
       */
      public Builder clearFcapNoseY() {
        bitField0_ = (bitField0_ & ~0x01000000);
        fcapNoseY_ = 0;
        onChanged();
        return this;
      }

      private double confidence_ ;
      /**
       * <code>optional double confidence = 26;</code>
       */
      public boolean hasConfidence() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional double confidence = 26;</code>
       */
      public double getConfidence() {
        return confidence_;
      }
      /**
       * <code>optional double confidence = 26;</code>
       */
      public Builder setConfidence(double value) {
        bitField0_ |= 0x02000000;
        confidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double confidence = 26;</code>
       */
      public Builder clearConfidence() {
        bitField0_ = (bitField0_ & ~0x02000000);
        confidence_ = 0D;
        onChanged();
        return this;
      }

      private MQMsg.pbChannelInfoEx chInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          MQMsg.pbChannelInfoEx, MQMsg.pbChannelInfoEx.Builder, MQMsg.pbChannelInfoExOrBuilder> chInfoBuilder_;
      /**
       * <code>required .pbChannelInfoEx chInfo = 27;</code>
       */
      public boolean hasChInfo() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>required .pbChannelInfoEx chInfo = 27;</code>
       */
      public MQMsg.pbChannelInfoEx getChInfo() {
        if (chInfoBuilder_ == null) {
          return chInfo_ == null ? MQMsg.pbChannelInfoEx.getDefaultInstance() : chInfo_;
        } else {
          return chInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>required .pbChannelInfoEx chInfo = 27;</code>
       */
      public Builder setChInfo(MQMsg.pbChannelInfoEx value) {
        if (chInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          chInfo_ = value;
          onChanged();
        } else {
          chInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x04000000;
        return this;
      }
      /**
       * <code>required .pbChannelInfoEx chInfo = 27;</code>
       */
      public Builder setChInfo(
          MQMsg.pbChannelInfoEx.Builder builderForValue) {
        if (chInfoBuilder_ == null) {
          chInfo_ = builderForValue.build();
          onChanged();
        } else {
          chInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x04000000;
        return this;
      }
      /**
       * <code>required .pbChannelInfoEx chInfo = 27;</code>
       */
      public Builder mergeChInfo(MQMsg.pbChannelInfoEx value) {
        if (chInfoBuilder_ == null) {
          if (((bitField0_ & 0x04000000) == 0x04000000) &&
              chInfo_ != null &&
              chInfo_ != MQMsg.pbChannelInfoEx.getDefaultInstance()) {
            chInfo_ =
              MQMsg.pbChannelInfoEx.newBuilder(chInfo_).mergeFrom(value).buildPartial();
          } else {
            chInfo_ = value;
          }
          onChanged();
        } else {
          chInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x04000000;
        return this;
      }
      /**
       * <code>required .pbChannelInfoEx chInfo = 27;</code>
       */
      public Builder clearChInfo() {
        if (chInfoBuilder_ == null) {
          chInfo_ = null;
          onChanged();
        } else {
          chInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x04000000);
        return this;
      }
      /**
       * <code>required .pbChannelInfoEx chInfo = 27;</code>
       */
      public MQMsg.pbChannelInfoEx.Builder getChInfoBuilder() {
        bitField0_ |= 0x04000000;
        onChanged();
        return getChInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>required .pbChannelInfoEx chInfo = 27;</code>
       */
      public MQMsg.pbChannelInfoExOrBuilder getChInfoOrBuilder() {
        if (chInfoBuilder_ != null) {
          return chInfoBuilder_.getMessageOrBuilder();
        } else {
          return chInfo_ == null ?
              MQMsg.pbChannelInfoEx.getDefaultInstance() : chInfo_;
        }
      }
      /**
       * <code>required .pbChannelInfoEx chInfo = 27;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          MQMsg.pbChannelInfoEx, MQMsg.pbChannelInfoEx.Builder, MQMsg.pbChannelInfoExOrBuilder> 
          getChInfoFieldBuilder() {
        if (chInfoBuilder_ == null) {
          chInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              MQMsg.pbChannelInfoEx, MQMsg.pbChannelInfoEx.Builder, MQMsg.pbChannelInfoExOrBuilder>(
                  getChInfo(),
                  getParentForChildren(),
                  isClean());
          chInfo_ = null;
        }
        return chInfoBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pbCapFaceInfoEx)
    }

    // @@protoc_insertion_point(class_scope:pbCapFaceInfoEx)
    private static final MQMsg.pbCapFaceInfoEx DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MQMsg.pbCapFaceInfoEx();
    }

    public static MQMsg.pbCapFaceInfoEx getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<pbCapFaceInfoEx>
        PARSER = new com.google.protobuf.AbstractParser<pbCapFaceInfoEx>() {
      public pbCapFaceInfoEx parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new pbCapFaceInfoEx(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<pbCapFaceInfoEx> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<pbCapFaceInfoEx> getParserForType() {
      return PARSER;
    }

    public MQMsg.pbCapFaceInfoEx getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pbChannelInfoEx_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pbChannelInfoEx_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pbCapFaceInfoEx_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pbCapFaceInfoEx_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013MQMsg.proto\"\250\005\n\017pbChannelInfoEx\022\014\n\004uui" +
      "d\030\001 \002(\t\022\023\n\013channel_uid\030\002 \001(\t\022\023\n\013channel_" +
      "psw\030\003 \001(\t\022\024\n\014channel_name\030\004 \001(\t\022\024\n\014chann" +
      "el_addr\030\005 \001(\t\022\024\n\014channel_port\030\006 \001(\005\022\022\n\nc" +
      "hannel_no\030\007 \001(\t\022\024\n\014channel_type\030\010 \001(\005\022\020\n" +
      "\010protocol\030\t \001(\005\022\026\n\016min_face_width\030\n \001(\005\022" +
      "\027\n\017min_img_quality\030\013 \001(\005\022\030\n\020min_cap_dist" +
      "ance\030\014 \001(\005\022\026\n\016min_confidence\030\r \001(\001\022\031\n\021ch" +
      "annel_threshold\030\016 \001(\001\022\020\n\010cap_stat\030\017 \001(\005\022" +
      "\014\n\004zoom\030\020 \001(\005\022\026\n\016max_face_count\030\021 \001(\005\022\022\n" +
      "\nface_merge\030\022 \001(\010\022\021\n\tmerge_all\030\023 \001(\010\022\027\n\017" +
      "merge_threshold\030\024 \001(\001\022\026\n\016merge_time_out\030" +
      "\025 \001(\005\022\024\n\014channel_guid\030\026 \001(\t\022\031\n\021channel_l" +
      "ongitude\030\027 \001(\001\022\030\n\020channel_latitude\030\030 \001(\001" +
      "\022\026\n\016channel_direct\030\031 \001(\005\022\024\n\014channel_area" +
      "\030\032 \001(\t\022\021\n\timportant\030\033 \001(\005\022\017\n\007sdk_ver\030\034 \001" +
      "(\t\022\017\n\007max_yaw\030\035 \001(\005\022\021\n\tmax_pitch\030\036 \001(\005\022\020" +
      "\n\010max_roll\030\037 \001(\005\"\333\004\n\017pbCapFaceInfoEx\022\021\n\t" +
      "person_id\030\001 \002(\t\022\017\n\007fcap_id\030\002 \002(\t\022\021\n\tfcap" +
      "_dcid\030\003 \001(\t\022\021\n\tfcap_time\030\004 \001(\003\022\024\n\014fcap_q" +
      "uality\030\005 \001(\005\022\024\n\014fcap_obj_img\030\006 \001(\014\022\025\n\rfc" +
      "ap_obj_feat\030\007 \001(\014\022\026\n\016fcap_scene_img\030\010 \001(" +
      "\014\022\023\n\013fcap_face_x\030\t \001(\005\022\023\n\013fcap_face_y\030\n " +
      "\001(\005\022\024\n\014fcap_face_cx\030\013 \001(\005\022\024\n\014fcap_face_c" +
      "y\030\014 \001(\005\022\020\n\010fcap_sex\030\r \001(\005\022\020\n\010fcap_age\030\016 " +
      "\001(\005\022\020\n\010fcap_yaw\030\017 \001(\005\022\022\n\nfcap_pitch\030\020 \001(" +
      "\005\022\021\n\tfcap_roll\030\021 \001(\005\022\027\n\017fcap_left_eye_x\030" +
      "\022 \001(\005\022\027\n\017fcap_left_eye_y\030\023 \001(\005\022\030\n\020fcap_r" +
      "ight_eye_x\030\024 \001(\005\022\030\n\020fcap_right_eye_y\030\025 \001" +
      "(\005\022\024\n\014fcap_mouth_x\030\026 \001(\005\022\024\n\014fcap_mouth_y" +
      "\030\027 \001(\005\022\023\n\013fcap_nose_x\030\030 \001(\005\022\023\n\013fcap_nose" +
      "_y\030\031 \001(\005\022\022\n\nconfidence\030\032 \001(\001\022 \n\006chInfo\030\033" +
      " \002(\0132\020.pbChannelInfoEx"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_pbChannelInfoEx_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_pbChannelInfoEx_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pbChannelInfoEx_descriptor,
        new java.lang.String[] { "Uuid", "ChannelUid", "ChannelPsw", "ChannelName", "ChannelAddr", "ChannelPort", "ChannelNo", "ChannelType", "Protocol", "MinFaceWidth", "MinImgQuality", "MinCapDistance", "MinConfidence", "ChannelThreshold", "CapStat", "Zoom", "MaxFaceCount", "FaceMerge", "MergeAll", "MergeThreshold", "MergeTimeOut", "ChannelGuid", "ChannelLongitude", "ChannelLatitude", "ChannelDirect", "ChannelArea", "Important", "SdkVer", "MaxYaw", "MaxPitch", "MaxRoll", });
    internal_static_pbCapFaceInfoEx_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_pbCapFaceInfoEx_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pbCapFaceInfoEx_descriptor,
        new java.lang.String[] { "PersonId", "FcapId", "FcapDcid", "FcapTime", "FcapQuality", "FcapObjImg", "FcapObjFeat", "FcapSceneImg", "FcapFaceX", "FcapFaceY", "FcapFaceCx", "FcapFaceCy", "FcapSex", "FcapAge", "FcapYaw", "FcapPitch", "FcapRoll", "FcapLeftEyeX", "FcapLeftEyeY", "FcapRightEyeX", "FcapRightEyeY", "FcapMouthX", "FcapMouthY", "FcapNoseX", "FcapNoseY", "Confidence", "ChInfo", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
