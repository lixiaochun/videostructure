package com.sensing.core.controller;

import java.io.IOException;
import java.util.concurrent.CopyOnWriteArraySet;

import javax.websocket.EncodeException;
import javax.websocket.EndpointConfig;
import javax.websocket.OnClose;
import javax.websocket.OnMessage;
import javax.websocket.OnOpen;
import javax.websocket.Session;
import javax.websocket.server.ServerEndpoint;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/**
 * 服务端向web端推行人的报警的抓拍
 * <p>Title: PeopleAlarmDataPush</p>
 * <p>Description:</p>
 * <p>Company: www.sensingtech.com</p> 
 * @author	mingxingyu
 * @date	2018年7月23日
 * @version 1.0
 */
@ServerEndpoint("/peopleAlarmDataPush")
public class PeopleAlarmDataPush {
    private Session session;
//    public String deviceId;//通道的uuid
    public static CopyOnWriteArraySet<PeopleAlarmDataPush> capPeopleWbSockets = new CopyOnWriteArraySet<PeopleAlarmDataPush>(); //此处定义静态变量，以在其他方法中获取到所有连接
//    public static boolean flag = false;
    private Log log = LogFactory.getLog(PeopleAlarmDataPush.class); 
    
    /**
     * 客户端创建websocket连接
     * @param session
     * @author mingxingyu
     * @date   2018年7月23日 上午11:17:22
     */
    @OnOpen
    public void onOpen(Session session,EndpointConfig config){
        this.session = session;
        capPeopleWbSockets.add(this); //将此对象存入集合中以在之后广播用，如果要实现一对一订阅，则类型对应为Map。由于这里广播就可以了随意用Set
        log.info("peopleAlarmDataPush收到链接,sessionId:"+session.getId());
    }
    /**
     * 关闭连接
     * 
     * @author mingxingyu
     * @date   2018年7月23日 上午11:18:04
     */
    @OnClose
    public void onClose(){
    	try {
    		capPeopleWbSockets.remove(this);//将socket对象从集合中移除，以便广播时不发送次连接。如果不移除会报错(需要测试)
    		log.info("peopleAlarmDataPush删除session,sessionid:"+session.getId());
		} catch (Exception e) {
			log.error("websocket删除的时候发生异常."+e.getMessage());
			e.printStackTrace();
		}
    }
    /**
     * 接收前端传过来的数据。
     * @param message
     * @param session
     * @author mingxingyu
     * @date   2018年7月23日 上午11:18:20
     */
    @OnMessage
    public void onMessage(String message ,Session session){
        log.info("peopleAlarmDataPush接收到信息,sessionid:"+session.getId()+",message:"+message);
//        this.deviceId = message;
    }
    
    /**
     * 服务端向客户端推送数据
     * @param message
     * @throws IOException
     * @throws EncodeException
     * @author mingxingyu
     * @date   2018年7月23日 上午11:19:17
     */
    public void sendMessage(String message) throws IOException, EncodeException {
    	try {
    		this.session.getBasicRemote().sendText(message);
    		log.info("peopleAlarmDataPush推送信息,sessionid:"+session.getId()+",messageLength:"+message.length());
		} catch (Exception e) {
			log.error("服务端向客户端推送数据."+e.getMessage());
			e.printStackTrace();
		}
    }
    
}